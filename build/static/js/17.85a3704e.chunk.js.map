{"version":3,"sources":["assets/home-intro-box.png","../../src/components/Toggle/Toggle.base.tsx","../../src/components/Toggle/Toggle.tsx","../../src/components/Toggle/Toggle.styles.ts","components/WebAddinTaskPane/index.js"],"names":["module","exports","getClassNames","classNamesFunction","props","_toggleButton","_onClick","ev","disabled","checked","onChange","onChanged","onClick","undefined","checkedProp","setState","initializeComponentRef","warnMutuallyExclusive","warnDeprecations","onAriaLabel","offAriaLabel","state","defaultChecked","_id","getId","getDerivedStateFromProps","nextProps","prevState","this","render","as","className","theme","keytipProps","id","label","ariaLabel","offText","onText","styles","inlineLabel","stateText","badAriaLabel","toggleNativeProps","classNames","onOffMissing","toggleId","labelId","stateTextId","labelledById","ariaRole","role","renderPill","keytipAttributes","pill","type","ref","_noop","thumb","pillContent","KeytipData","ariaDescribedBy","RootType","root","hidden","Label","htmlFor","container","text","focus","current","Toggle","styled","semanticColors","palette","pillUncheckedBackground","bodyBackground","pillCheckedBackground","inputBackgroundChecked","pillCheckedHoveredBackground","inputBackgroundCheckedHovered","thumbUncheckedHoveredBackground","neutralDark","pillCheckedDisabledBackground","disabledBodySubtext","thumbBackground","smallInputBorder","thumbCheckedBackground","inputForegroundChecked","thumbDisabledBackground","thumbCheckedDisabledBackground","disabledBackground","pillBorderColor","pillBorderHoveredColor","inputBorderHovered","pillBorderDisabledColor","textDisabledColor","disabledText","fonts","medium","marginBottom","display","alignItems","color","selectors","marginRight","order","marginLeft","wordBreak","position","inset","fontSize","boxSizing","width","height","borderRadius","DEFAULT_PILL_HEIGHT","transition","border","background","cursor","padding","borderColor","backgroundColor","justifyContent","borderWidth","DEFAULT_THUMB_SIZE","borderStyle","margin","userSelect","fontWeight","regular","scope","Cookies","require","optShowMain","Header","title","logo","message","src","alt","React","HeroList","onLinkClick","url","console","log","curUser","user_id","data","tel","handlePost","apiPublicPath","then","result","success","window","open","RootPath","error","slice","length","replace","children","listItems","items","map","item","index","key","icon","href","bind","primaryText","TaskHome","onComposeClick","set","expires","history","push","pathname","onTestClick","wps","alert","Selection","WpsApplication","TypeText","SetRange","TypeParagraph","MoveUp","Style","TglonChange","ShowMain","get","homeIntro","textAlign","connect"],"mappings":"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","file":"static/js/17.85a3704e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-intro-box.8e3104f6.png\";","import * as React from 'react';\nimport {\n  initializeComponentRef,\n  classNamesFunction,\n  getId,\n  inputProperties,\n  getNativeProps,\n  warnDeprecations,\n  warnMutuallyExclusive,\n  FocusRects,\n} from '../../Utilities';\nimport { IToggleProps, IToggle, IToggleStyleProps, IToggleStyles } from './Toggle.types';\nimport { Label } from '../../Label';\nimport { KeytipData } from '../../KeytipData';\n\nexport interface IToggleState {\n  checked: boolean;\n}\n\nconst getClassNames = classNamesFunction<IToggleStyleProps, IToggleStyles>();\nconst COMPONENT_NAME = 'Toggle';\n\nexport class ToggleBase extends React.Component<IToggleProps, IToggleState> implements IToggle {\n  private _id: string;\n  private _toggleButton = React.createRef<HTMLButtonElement>();\n\n  public static getDerivedStateFromProps(\n    nextProps: Readonly<IToggleProps>,\n    prevState: Readonly<IToggleState>,\n  ): Partial<IToggleState> | null {\n    if (nextProps.checked === undefined) {\n      return null;\n    }\n\n    return {\n      checked: !!nextProps.checked,\n    };\n  }\n\n  constructor(props: IToggleProps) {\n    super(props);\n\n    initializeComponentRef(this);\n    warnMutuallyExclusive(COMPONENT_NAME, props, {\n      checked: 'defaultChecked',\n    });\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      onAriaLabel: 'ariaLabel',\n      offAriaLabel: undefined,\n      onChanged: 'onChange',\n    });\n\n    this.state = {\n      checked: !!(props.checked || props.defaultChecked),\n    };\n    this._id = getId('Toggle');\n  }\n\n  /**\n   * Gets the current checked state of the toggle.\n   */\n  public get checked(): boolean {\n    return this.state.checked;\n  }\n\n  public render(): JSX.Element {\n    const {\n      as: RootType = 'div',\n      className,\n      theme,\n      disabled,\n      keytipProps,\n      id,\n      label,\n      ariaLabel,\n      /* eslint-disable deprecation/deprecation */\n      onAriaLabel,\n      offAriaLabel,\n      /* eslint-enable deprecation/deprecation */\n      offText,\n      onText,\n      styles,\n      inlineLabel,\n    } = this.props;\n    const { checked } = this.state;\n    const stateText = checked ? onText : offText;\n    const badAriaLabel = checked ? onAriaLabel : offAriaLabel;\n    const toggleNativeProps = getNativeProps(this.props, inputProperties, ['defaultChecked']);\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      disabled,\n      checked,\n      inlineLabel,\n      onOffMissing: !onText && !offText,\n    });\n\n    const toggleId = id || this._id;\n    const labelId = `${toggleId}-label`;\n    const stateTextId = `${toggleId}-stateText`;\n\n    // The following properties take priority for what Narrator should read:\n    // 1. ariaLabel\n    // 2. onAriaLabel (if checked) or offAriaLabel (if not checked)\n    // 3. label AND stateText, if existent\n\n    let labelledById: string | undefined = undefined;\n    if (!ariaLabel && !badAriaLabel) {\n      if (label) {\n        labelledById = labelId;\n      }\n      if (stateText) {\n        labelledById = labelledById ? `${labelledById} ${stateTextId}` : stateTextId;\n      }\n    }\n\n    const ariaRole = this.props.role ? this.props.role : 'switch';\n\n    const renderPill = (keytipAttributes: any = {}) => (\n      <button\n        {...toggleNativeProps}\n        {...keytipAttributes}\n        className={classNames.pill}\n        disabled={disabled}\n        id={toggleId}\n        type=\"button\"\n        role={ariaRole}\n        ref={this._toggleButton}\n        aria-disabled={disabled}\n        aria-checked={checked}\n        aria-label={ariaLabel ? ariaLabel : badAriaLabel}\n        data-is-focusable={true}\n        onChange={this._noop}\n        onClick={this._onClick}\n        aria-labelledby={labelledById}\n      >\n        <span className={classNames.thumb} />\n      </button>\n    );\n\n    const pillContent = keytipProps ? (\n      <KeytipData\n        keytipProps={keytipProps}\n        ariaDescribedBy={(toggleNativeProps as any)['aria-describedby']}\n        disabled={disabled}\n      >\n        {(keytipAttributes: any): JSX.Element => renderPill(keytipAttributes)}\n      </KeytipData>\n    ) : (\n      renderPill()\n    );\n\n    return (\n      <RootType className={classNames.root} hidden={(toggleNativeProps as any).hidden}>\n        {label && (\n          <Label htmlFor={toggleId} className={classNames.label} id={labelId}>\n            {label}\n          </Label>\n        )}\n\n        <div className={classNames.container}>\n          {pillContent}\n          {stateText && (\n            // This second \"htmlFor\" property is needed to allow the\n            // toggle's stateText to also trigger a state change when clicked.\n            <Label htmlFor={toggleId} className={classNames.text} id={stateTextId}>\n              {stateText}\n            </Label>\n          )}\n        </div>\n        <FocusRects />\n      </RootType>\n    );\n  }\n\n  public focus() {\n    if (this._toggleButton.current) {\n      this._toggleButton.current.focus();\n    }\n  }\n\n  private _onClick = (ev: React.MouseEvent<HTMLElement>) => {\n    // eslint-disable-next-line deprecation/deprecation\n    const { disabled, checked: checkedProp, onChange, onChanged, onClick } = this.props;\n    const { checked } = this.state;\n\n    if (!disabled) {\n      // Only update the state if the user hasn't provided it.\n      if (checkedProp === undefined) {\n        this.setState({\n          checked: !checked,\n        });\n      }\n\n      if (onChange) {\n        onChange(ev, !checked);\n      }\n\n      if (onChanged) {\n        onChanged(!checked);\n      }\n\n      if (onClick) {\n        onClick(ev);\n      }\n    }\n  };\n\n  private _noop(): void {\n    /* no-op */\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { ToggleBase } from './Toggle.base';\nimport { getStyles } from './Toggle.styles';\nimport { IToggleProps, IToggleStyleProps, IToggleStyles } from './Toggle.types';\n\nexport const Toggle: React.FunctionComponent<IToggleProps> = styled<IToggleProps, IToggleStyleProps, IToggleStyles>(\n  ToggleBase,\n  getStyles,\n  undefined,\n  { scope: 'Toggle' },\n);\n","import { HighContrastSelector, getFocusStyle, FontWeights, getHighContrastNoAdjustStyle } from '../../Styling';\nimport { IToggleStyleProps, IToggleStyles } from './Toggle.types';\n\nconst DEFAULT_PILL_WIDTH = 40;\nconst DEFAULT_PILL_HEIGHT = 20;\nconst DEFAULT_THUMB_SIZE = 12;\n\nexport const getStyles = (props: IToggleStyleProps): IToggleStyles => {\n  const { theme, className, disabled, checked, inlineLabel, onOffMissing } = props;\n  const { semanticColors, palette } = theme;\n\n  // Tokens\n  const pillUncheckedBackground = semanticColors.bodyBackground;\n  const pillCheckedBackground = semanticColors.inputBackgroundChecked;\n  const pillCheckedHoveredBackground = semanticColors.inputBackgroundCheckedHovered;\n  const thumbUncheckedHoveredBackground = palette.neutralDark;\n  const pillCheckedDisabledBackground = semanticColors.disabledBodySubtext;\n  const thumbBackground = semanticColors.smallInputBorder;\n  const thumbCheckedBackground = semanticColors.inputForegroundChecked;\n  const thumbDisabledBackground = semanticColors.disabledBodySubtext;\n  const thumbCheckedDisabledBackground = semanticColors.disabledBackground;\n  const pillBorderColor = semanticColors.smallInputBorder;\n  const pillBorderHoveredColor = semanticColors.inputBorderHovered;\n  const pillBorderDisabledColor = semanticColors.disabledBodySubtext;\n  const textDisabledColor = semanticColors.disabledText;\n\n  return {\n    root: [\n      'ms-Toggle',\n      checked && 'is-checked',\n      !disabled && 'is-enabled',\n      disabled && 'is-disabled',\n      theme.fonts.medium,\n      {\n        marginBottom: '8px',\n      },\n      inlineLabel && {\n        display: 'flex',\n        alignItems: 'center',\n      },\n      className,\n    ],\n\n    label: [\n      'ms-Toggle-label',\n      { display: 'inline-block' },\n      disabled && {\n        color: textDisabledColor,\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n      inlineLabel &&\n        !onOffMissing && {\n          marginRight: 16,\n        },\n      onOffMissing &&\n        inlineLabel && {\n          order: 1,\n          marginLeft: 16,\n        },\n      inlineLabel && { wordBreak: 'break-all' },\n    ],\n\n    container: [\n      'ms-Toggle-innerContainer',\n      {\n        display: 'flex',\n        position: 'relative',\n      },\n    ],\n\n    pill: [\n      'ms-Toggle-background',\n      getFocusStyle(theme, { inset: -3 }),\n      {\n        fontSize: '20px',\n        boxSizing: 'border-box',\n        width: DEFAULT_PILL_WIDTH,\n        height: DEFAULT_PILL_HEIGHT,\n        borderRadius: DEFAULT_PILL_HEIGHT / 2,\n        transition: 'all 0.1s ease',\n        border: `1px solid ${pillBorderColor}`,\n        background: pillUncheckedBackground,\n        cursor: 'pointer',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '0 3px',\n      },\n      !disabled && [\n        !checked && {\n          selectors: {\n            ':hover': [\n              {\n                borderColor: pillBorderHoveredColor,\n              },\n            ],\n            ':hover .ms-Toggle-thumb': [\n              {\n                backgroundColor: thumbUncheckedHoveredBackground,\n                selectors: {\n                  [HighContrastSelector]: {\n                    borderColor: 'Highlight',\n                  },\n                },\n              },\n            ],\n          },\n        },\n        checked && [\n          {\n            background: pillCheckedBackground,\n            borderColor: 'transparent',\n            justifyContent: 'flex-end',\n          },\n          {\n            selectors: {\n              ':hover': [\n                {\n                  backgroundColor: pillCheckedHoveredBackground,\n                  borderColor: 'transparent',\n                  selectors: {\n                    [HighContrastSelector]: {\n                      backgroundColor: 'Highlight',\n                    },\n                  },\n                },\n              ],\n              [HighContrastSelector]: {\n                backgroundColor: 'Highlight',\n                ...getHighContrastNoAdjustStyle(),\n              },\n            },\n          },\n        ],\n      ],\n      disabled && [\n        {\n          cursor: 'default',\n        },\n        !checked && [\n          {\n            borderColor: pillBorderDisabledColor,\n          },\n        ],\n        checked && [\n          {\n            backgroundColor: pillCheckedDisabledBackground,\n            borderColor: 'transparent',\n            justifyContent: 'flex-end',\n          },\n        ],\n      ],\n      !disabled && {\n        selectors: {\n          '&:hover': {\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n        },\n      },\n    ],\n\n    thumb: [\n      'ms-Toggle-thumb',\n      {\n        display: 'block',\n        width: DEFAULT_THUMB_SIZE,\n        height: DEFAULT_THUMB_SIZE,\n        borderRadius: '50%',\n        transition: 'all 0.1s ease',\n        backgroundColor: thumbBackground,\n        /* Border is added to handle high contrast mode for Firefox */\n        borderColor: 'transparent',\n        borderWidth: DEFAULT_THUMB_SIZE / 2,\n        borderStyle: 'solid',\n        boxSizing: 'border-box',\n      },\n      !disabled &&\n        checked && [\n          {\n            backgroundColor: thumbCheckedBackground,\n            selectors: {\n              [HighContrastSelector]: {\n                backgroundColor: 'Window',\n                borderColor: 'Window',\n              },\n            },\n          },\n        ],\n      disabled && [\n        !checked && [\n          {\n            backgroundColor: thumbDisabledBackground,\n          },\n        ],\n        checked && [\n          {\n            backgroundColor: thumbCheckedDisabledBackground,\n          },\n        ],\n      ],\n    ],\n\n    text: [\n      'ms-Toggle-stateText',\n      {\n        selectors: {\n          // Workaround: make rules more specific than Label rules.\n          '&&': {\n            padding: '0',\n            margin: '0 8px',\n            userSelect: 'none',\n            fontWeight: FontWeights.regular,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          '&&': {\n            color: textDisabledColor,\n            selectors: {\n              [HighContrastSelector]: {\n                color: 'GrayText',\n              },\n            },\n          },\n        },\n      },\n    ],\n  };\n};\n","import * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PrimaryButton } from \"office-ui-fabric-react/lib/Button\";\nimport { Toggle } from \"office-ui-fabric-react/lib/Toggle\";\nimport { Link } from \"office-ui-fabric-react/lib/Link\";\nimport \"./WebAddinTaskPane.scss\";\n//import WebAddinHeader from \"../WebAddinHeader\";\nimport homeIntro from \"../../assets/home-intro-box.png\";\nimport {Consumer} from \"../WebAddinContext\";\nimport {handlePost} from \"../WebAddinCommon\";\nimport {apiPublicPath,RootPath} from \"../../settings\";\n/* global wps:false */\nconst Cookies = require(\"js-cookie\");\nlet optShowMain = false;\nclass Header extends React.Component {\n  render() {\n    const { title, logo, message } = this.props;\n    return (\n      <section className=\"ms-welcome__header ms-bgColor-neutralLighter ms-u-fadeIn500\">\n        <img width=\"180\" height=\"180\" src={logo} alt={title} title={title} />\n        <h2 className=\"ms-fontWeight-light ms-fontColor-neutralPrimary\">{message}</h2>\n      </section>\n    );\n  }\n}\nclass HeroList extends React.Component {\n  onLinkClick = url => {\n    console.log(\"TaskPane_HeroList.onLinkClick_ this.props.curUser:\", this.props.curUser);\n    //自动登录\n    if (this.props.curUser.user_id!==\"\"){\n      const data = {};\n      data.tel = this.props.curUser.tel;\n      data.user_id = this.props.curUser.user_id;\n      handlePost(`${apiPublicPath}users/reglogin/addtoken`, data).then(\n          result => {\n            if (result.success) {\n              window.open(RootPath+'LoginOnce/tel/'+this.props.curUser.tel + \"/ID/\"+this.props.curUser.user_id+ \"/direct/\"+url);\n            }\n            this.setState({});\n          },\n          error => {}\n      );\n    }else{\n     window.open(RootPath.slice(0,RootPath.length-1)+ url.replace(/_/g,\"/\"));\n    }\n  };\n\n  render() {\n    const { children, items } = this.props;\n    const listItems = items.map((item, index) => (\n      <li className=\"ms-ListItem\" key={index}>\n        <i className={`ms-Icon ms-Icon--${item.icon}`}></i>\n        <Link href={\"#\"}>\n          <span onClick={this.onLinkClick.bind(this,item.url)} className=\"ms-font-m ms-fontColor-neutralPrimary\">{item.primaryText}</span>\n        </Link>\n      </li>\n    ));\n    return (\n      <div className=\"ms-welcome__main\">\n        <ul className=\"ms-List ms-welcome__features ms-u-slideUpIn10\">{listItems}</ul>\n        {children}\n      </div>\n    );\n  }\n}\nclass TaskHome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listItems: [],\n      ShowMain: Cookies.get(\"composing\") === \"true\"\n    };\n  }\n\n componentDidMount() {\n    this.setState({\n      listItems: [\n        {\n          icon: \"Ribbon\",\n          primaryText: \"Word百宝箱更强大\",\n          url: \"_WordAddin\"\n        },\n        {\n          icon: \"Unlock\",\n          primaryText: \"排版客户端更方便\",\n          url: \"_PcClient\"\n        },\n        {\n          icon: \"Design\",\n          primaryText: \"详情:AiDocx.com\",\n          url: \"_\"\n        }\n      ],\n      ShowMain: Cookies.get(\"composing\")\n    });\n\n    if (Cookies.get(\"composing\") === \"true\") {\n      //console.log(\"this.props.history_taskpane:\",this.props.history);\n      this.props.history.push({ pathname: \"/Compose\", state: {} });\n    }\n  }\n\n  onComposeClick = item => {\n    //console.log('this.state.ShowMa:',this.state.ShowMain);\n    Cookies.set(\"composing\", optShowMain, { expires: 365 });\n    this.props.history.push({ pathname: \"/Compose\", state: {} });\n  };\n\n  onTestClick = item => {\n    //console.log('this.state.ShowMa:',this.state.ShowMain);\n    wps.alert(\"test click\");\n    let Selection = wps.WpsApplication().Selection;\n    Selection.TypeText(\"测试\");\n    Selection.SetRange(2, 2);\n    Selection.TypeText(\"插入\");\n    Selection.SetRange(4, 4);\n    Selection.TypeParagraph();\n    Selection.TypeText(\"第二段\");\n    Selection.SetRange(8, 8);\n    Selection.MoveUp(5, 1, 0);\n    Selection.Style = \"标题 1\";\n   };\n\n  TglonChange = (ev, checked) => {\n    //console.log('toggle is ' + (checked ? 'checked' : 'not checked'));\n    Cookies.set(\"composing\", checked, { expires: 365 });\n    optShowMain = checked;\n    this.setState({ ShowMain: checked });\n  };\n  render() {\n    //let btnStyles= IButtonStyles;\n    let btnStyles = {\n      root: { textAlign: \"center\", fontSize: \"16px\", height: \"42px\", width: \"160px\" }\n    };\n    /*\n    if (!isOfficeInitialized) {\n    //直接跳转到主页\n      return (\n        <Progress title={title} logo=\"../../assets/logo-filled.png\" message=\"Please sideload your addin to see app body.\" />\n      );\n    }\n\n                <PrimaryButton styles={btnStyles} onClick={this.onTestClick}>\n              测试\n            </PrimaryButton>\n    */\n    //console.log(\"this.props.history:\", this.props.history);\n    return (\n        \n      <div className=\"ms-welcome\">\n        <Header logo={homeIntro} title={this.props.title} message=\"长文档智能排版\" />\n        <HeroList items={this.state.listItems} curUser={this.props.curUser}>\n          <p className=\"ms-font-l\">\n            查找到方案后<b>一键智能排版</b>\n          </p>\n          <div>\n            <PrimaryButton styles={btnStyles} onClick={this.onComposeClick}>\n              立即体验\n            </PrimaryButton>\n          </div>\n          <Toggle\n            className=\"ms-welcome-toggle\"\n            label=\"启动就进入智能排版\"\n            inlineLabel\n            //  onText=\"On\"\n            //  offText=\"Off\"\n            defaultChecked={optShowMain}\n            onChange={this.TglonChange}\n          />\n        </HeroList>\n      </div>\n          )}\n}\n \nconst mapState = state => {\n \n  return {\n    curUser: state.current,\n   \n  };\n};\n \nexport default connect(\n  mapState,\n \n)(TaskHome);\n \n"],"sourceRoot":""}