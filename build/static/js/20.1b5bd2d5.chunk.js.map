{"version":3,"sources":["../../src/components/Persona/Persona.types.ts","../../src/initials.ts","../../src/components/Persona/PersonaConsts.tsx","../../src/components/Persona/PersonaPresence/PersonaPresence.base.tsx","../../src/components/Persona/PersonaPresence/PersonaPresence.styles.ts","../../src/components/Persona/PersonaPresence/PersonaPresence.tsx","../../src/components/Persona/PersonaInitialsColor.ts","../../src/components/Persona/PersonaCoin/PersonaCoin.base.tsx","../../src/components/Persona/PersonaCoin/PersonaCoin.styles.ts","../../src/components/Persona/PersonaCoin/PersonaCoin.tsx","../../src/components/DocumentCard/DocumentCardActivity.base.tsx","../../src/components/DocumentCard/DocumentCardActivity.ts","../../src/components/SearchBox/SearchBox.base.tsx","../../src/components/SearchBox/SearchBox.styles.tsx","../../src/components/SearchBox/SearchBox.tsx","../../src/components/DocumentCard/DocumentCardActions.base.tsx","../../src/components/DocumentCard/DocumentCardActions.styles.ts","../../src/components/DocumentCard/DocumentCardActions.ts","../../src/components/DocumentCard/DocumentCardLocation.base.tsx","../../src/components/DocumentCard/DocumentCardLocation.ts"],"names":["PersonaSize","PersonaPresence","PersonaInitialsColor","UNWANTED_ENCLOSURES_REGEX","UNWANTED_CHARS_REGEX","PHONENUMBER_REGEX","MULTIPLE_WHITESPACES_REGEX","UNSUPPORTED_TEXT_REGEX","getInitials","displayName","isRtl","allowPhoneInitials","replace","trim","cleanupDisplayName","test","initials","splits","split","length","charAt","toUpperCase","getInitialsLatin","personaSize","personaPresenceSize","size8","size10","size16","size24","size28","size32","size40","size48","size56","size72","size100","size120","size6","size12","size20","border","size","isSize8","isSize10","tiny","isSize16","isSize24","extraExtraSmall","isSize28","extraSmall","isSize32","isSize40","small","isSize48","regular","isSize56","isSize72","large","isSize100","extraLarge","isSize120","sizeToPixels","getClassNames","classNamesFunction","cacheSize","props","_onRenderIcon","className","style","Icon","iconName","determineIcon","presence","isOutOfOffice","render","coinSize","styles","theme","presenceTitle","presenceColors","this","renderIcon","presenceHeightWidth","presenceMaxSize","coinSizeWithPresenceIconStyle","fontSize","presenceFontMaxSize","lineHeight","undefined","coinSizeWithPresenceStyle","width","height","classNames","none","role","title","presenceIcon","GlobalClassNames","makeOpenCircleIconStyle","color","borderColor","makeBeforeBorderStyle","borderSize","selectors","makeSizeStyle","backgroundColor","styled","semanticColors","fonts","isAvailable","online","isAway","away","isBlocked","blocked","isBusy","busy","isDoNotDisturb","dnd","isOffline","offline","presenceColorAvailable","available","presenceColorAway","presenceColorBusy","presenceColorDnd","presenceColorOffline","presenceColorOof","oof","presenceColorBackground","background","bodyBackground","isOpenCirclePresence","position","borderRadius","top","right","bottom","textAlign","boxSizing","backgroundClip","left","borderWidth","content","transform","verticalAlign","medium","scope","COLOR_SWATCHES_LOOKUP","lightBlue","blue","darkBlue","teal","green","darkGreen","lightPink","pink","magenta","purple","orange","lightRed","darkRed","violet","gold","burgundy","warmGray","cyan","rust","coolGray","COLOR_SWATCHES_NUM_ENTRIES","getPersonaInitialsColor","primaryText","text","initialsColor","personaInitialsColor","lightGreen","red","transparent","black","gray","personaInitialsColorToHexCode","hashCode","iLen","ch","charCodeAt","shift","getInitialsColorFromName","getInitialsStyles","memoize","initialsTextColor","showUnknownPersonaCoin","_onRenderCoin","imageUrl","imageAlt","imageShouldFadeIn","imageShouldStartVisible","dimension","Image","image","imageFit","cover","src","alt","shouldFadeIn","shouldStartVisible","onLoadingStateChange","_onPhotoLoadingStateChange","_onRenderInitials","imageInitials","isRTL","_getText","loadState","setState","isImageLoaded","loaded","isImageError","error","onPhotoLoadingStateChange","state","UNSAFE_componentWillReceiveProps","nextProps","coinProps","onRenderCoin","onRenderPersonaCoin","onRenderInitials","showInitialsUntilImageLoads","divProps","divCoinProps","coinSizeStyle","hideImage","personaPresenceProps","shouldRenderInitials","Boolean","coin","imageArea","size10WithoutPresenceIcon","children","defaultProps","PersonaCoin","palette","xSmall","flex","overflow","marginRight","perspective","white","fontWeight","semibold","i","mediumPlus","xLarge","xxLarge","superLarge","initializeComponentRef","activity","people","_classNames","multiplePeople","root","_renderAvatars","details","name","_getNameString","avatars","_renderAvatar","person","avatar","profileImageSrc","nameString","DocumentCardActivity","_rootElement","_inputElement","_onClickFocus","inputElement","current","focus","selectionStart","selectionEnd","_onFocusCapture","ev","hasFocus","onFocus","_onClearClick","clearButtonProps","onClick","defaultPrevented","_onClear","_onKeyDown","which","KeyCodes","escape","onEscape","value","enter","onSearch","preventDefault","stopPropagation","onKeyDown","_onBlur","onBlur","_onInputChange","target","_latestValue","_callOnChange","warnDeprecations","labelText","defaultValue","_fallbackId","getId","newProps","ariaLabel","placeholder","disabled","underlined","disableAnimation","iconProps","id","placeholderValue","hasInput","nativeProps","ref","onFocusCapture","iconContainer","icon","field","onChange","onInput","clearButton","IconButton","onClear","newValue","onChanged","SearchBox","effects","placeholderStyles","inputPlaceholderText","opacity","inputIconAlt","neutralSecondary","inputIconAltHovered","neutralPrimary","inputBorderDisabled","neutralLighter","inputBackgroundHovered","inputBackgroundDisabled","inputText","inputBackground","display","flexDirection","flexWrap","alignItems","padding","roundedCorner2","inputBorder","inputBorderHovered","inputIconHovered","pointerEvents","inputFocusBorderAlt","cursor","justifyContent","flexShrink","inputIcon","inputIconDisabled","transition","durationValue1","flexBasis","margin","outline","fontFamily","minWidth","textOverflow","paddingBottom","disabledText","actions","views","map","action","index","key","viewsIcon","DocumentCardActions","ACTION_SIZE","VERTICAL_PADDING","float","buttonText","location","locationHref","href","DocumentCardLocation"],"mappings":"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","file":"static/js/20.1b5bd2d5.chunk.js","sourcesContent":["import * as React from 'react';\nimport { IRefObject, IRenderFunction } from '../../Utilities';\nimport { PersonaBase } from './Persona.base';\nimport { ImageLoadState } from '../../Image';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IStyleFunctionOrObject } from '../../Utilities';\nimport { PersonaCoinBase } from './PersonaCoin/PersonaCoin.base';\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersona {}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaSharedProps extends React.HTMLAttributes<PersonaBase | PersonaCoinBase | HTMLDivElement> {\n  /**\n   * Primary text to display, usually the name of the person.\n   */\n  text?: string;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Optional custom renderer for the coin\n   * @deprecated Use `onRenderPersonaCoin` for custom rendering instead\n   */\n  onRenderCoin?: IRenderFunction<IPersonaSharedProps>;\n\n  /**\n   * Optional custom renderer for the coin\n   */\n  onRenderPersonaCoin?: IRenderFunction<IPersonaSharedProps>;\n\n  /**\n   * If true, adds the css class 'is-fadeIn' to the image.\n   */\n  imageShouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables imageShouldFadeIn.\n   * @defaultvalue false\n   */\n  imageShouldStartVisible?: boolean;\n\n  /**\n   * Url to the image to use, should be a square aspect ratio and big enough to fit in the image area.\n   */\n  imageUrl?: string;\n\n  /**\n   * Alt text for the image to use. Defaults to an empty string.\n   */\n  imageAlt?: string;\n\n  /**\n   * The user's initials to display in the image area when there is no image.\n   * @defaultvalue [Derived from text]\n   */\n  imageInitials?: string;\n\n  /**\n   * Whether initials are calculated for phone numbers and number sequences.\n   * Example: Set property to true to get initials for project names consisting of numbers only.\n   * @defaultvalue false\n   */\n  allowPhoneInitials?: boolean;\n\n  /**\n   * Optional custom renderer for the initials\n   */\n  onRenderInitials?: IRenderFunction<IPersonaSharedProps>;\n\n  /**\n   * Optional callback for when loading state of the photo changes\n   */\n  onPhotoLoadingStateChange?: (newImageLoadState: ImageLoadState) => void;\n\n  /**\n   * The background color when the user's initials are displayed.\n   * @defaultvalue [Derived from text]\n   */\n  initialsColor?: PersonaInitialsColor | string;\n\n  /**\n   * The text color when the user's initials are displayed\n   */\n  initialsTextColor?: string;\n\n  /** The colors to be used for the presence-icon and it's background */\n  presenceColors?: {\n    available: string;\n    away: string;\n    busy: string;\n    dnd: string;\n    offline: string;\n    oof: string;\n    background: string;\n  };\n\n  /**\n   * Presence of the person to display - will not display presence if undefined.\n   * @defaultvalue PersonaPresence.none\n   */\n  presence?: PersonaPresence;\n\n  /**\n   * Presence title to be shown as a tooltip on hover over the presence icon.\n   */\n  presenceTitle?: string;\n\n  /**\n   * This flag can be used to signal the persona is out of office.\n   * This will change the way the presence icon looks for statuses that support dual-presence.\n   */\n  isOutOfOffice?: boolean;\n\n  /**\n   * Secondary text to display, usually the role of the user.\n   */\n  secondaryText?: string;\n\n  /**\n   * Tertiary text to display, usually the status of the user.\n   * The tertiary text will only be shown when using size72 or size100.\n   */\n  tertiaryText?: string;\n\n  /**\n   * Optional text to display, usually a custom message set. The optional text will only be shown when using size100.\n   */\n  optionalText?: string;\n\n  /**\n   * Whether to not render persona details, and just render the persona image/initials.\n   */\n  hidePersonaDetails?: boolean;\n\n  /*\n   * If true, show the secondary text line regardless of the size of the persona\n   */\n  showSecondaryText?: boolean;\n\n  /**\n   * If true, show the special coin for unknown persona.\n   * It has '?' in place of initials, with static font and background colors\n   */\n  showUnknownPersonaCoin?: boolean;\n\n  /**\n   * If true renders the initials while the image is loading.\n   * This only applies when an imageUrl is provided.\n   * @defaultvalue false\n   */\n  showInitialsUntilImageLoads?: boolean;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Optional HTML element props for Persona coin.\n   */\n  coinProps?: IPersonaCoinProps;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Primary text to display, usually the name of the person.\n   * @deprecated Use `text` instead.\n   */\n  primaryText?: string;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaProps extends IPersonaSharedProps {\n  /**\n   * Optional callback to access the IPersona interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IPersona>;\n\n  /**\n   * Additional CSS class(es) to apply to the Persona\n   */\n  className?: string;\n\n  /**\n   * Call to provide customized styling that will layer on top of variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaStyleProps, IPersonaStyles>;\n\n  /**\n   * Optional custom renderer for the primary text.\n   */\n  onRenderPrimaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the secondary text.\n   */\n  onRenderSecondaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the tertiary text.\n   */\n  onRenderTertiaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the optional text.\n   */\n  onRenderOptionalText?: IRenderFunction<IPersonaProps>;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Custom class name.\n   */\n  className?: string;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Presence of the person to display - will not display presence if undefined.\n   * @defaultvalue PersonaPresence.none\n   */\n  presence?: PersonaPresence;\n\n  /*\n   * If true, show the secondary text line regardless of the size of the persona\n   */\n  showSecondaryText?: boolean;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaStyles {\n  root: IStyle;\n  details: IStyle;\n  primaryText: IStyle;\n  secondaryText: IStyle;\n  tertiaryText: IStyle;\n  optionalText: IStyle;\n  textContent: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinProps extends IPersonaSharedProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaCoinStyleProps, IPersonaCoinStyles>;\n\n  /**\n   * Additional css class to apply to the PersonaCoin\n   * @defaultvalue undefined\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Custom class name.\n   */\n  className?: string;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Decides whether to display coin for unknown persona\n   */\n  showUnknownPersonaCoin?: boolean;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinStyles {\n  coin: IStyle;\n  imageArea: IStyle;\n  image: IStyle;\n  initials: IStyle;\n  size10WithoutPresenceIcon: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaPresenceProps extends IPersonaSharedProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaPresenceStyleProps, IPersonaPresenceStyles>;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport type IPersonaPresenceStyleProps = Required<Pick<IPersonaSharedProps, 'theme'>> &\n  Pick<IPersonaSharedProps, 'presence' | 'isOutOfOffice' | 'size' | 'presenceColors'> &\n  Pick<IPersonaProps, 'className'>;\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaPresenceStyles {\n  presence: IStyle;\n  presenceIcon: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaSize {\n  /**\n   * `tiny` size has been deprecated in favor of standardized numeric sizing. Use `size8` instead.\n   * @deprecated Use `size8` instead.\n   */\n  tiny = 0,\n\n  /**\n   *\n   * `extraExtraSmall` size has been deprecated in favor of standardized numeric sizing. Use `size24` instead.\n   * @deprecated Use `size24` instead.\n   */\n  extraExtraSmall = 1,\n\n  /**\n   * `extraSmall` size has been deprecated in favor of standardized numeric sizing. Use `size32` instead.\n   * @deprecated Use `size32` instead.\n   */\n  extraSmall = 2,\n\n  /**\n   * `small` size has been deprecated in favor of standardized numeric sizing. Use `size40` instead.\n   * @deprecated Use `size40` instead.\n   */\n  small = 3,\n\n  /**\n   * `regular` size has been deprecated in favor of standardized numeric sizing. Use `size48` instead.\n   * @deprecated Use `size48` instead.\n   */\n  regular = 4,\n\n  /**\n   * `large` size has been deprecated in favor of standardized numeric sizing. Use `size72` instead.\n   * @deprecated Use `size72` instead.\n   */\n  large = 5,\n\n  /**\n   * `extraLarge` size has been deprecated in favor of standardized numeric sizing. Use `size100` instead.\n   * @deprecated Use `size100` instead.\n   */\n  extraLarge = 6,\n\n  /**\n   * No `PersonaCoin` is rendered.\n   */\n  size8 = 17,\n\n  /**\n   * No `PersonaCoin` is rendered. Deprecated in favor of `size8` to align with design specifications.\n   * @deprecated Use `size8` instead. Will be removed in a future major release.\n   */\n  size10 = 9,\n\n  /**\n   * Renders a 16px `PersonaCoin`. Deprecated due to not being in the design specification.\n   * @deprecated Will be removed in a future major release.\n   */\n  size16 = 8,\n\n  /**\n   * Renders a 24px `PersonaCoin`.\n   */\n  size24 = 10,\n\n  /**\n   * Renders a 28px `PersonaCoin`. Deprecated due to not being in the design specification.\n   * @deprecated Will be removed in a future major release.\n   */\n  size28 = 7,\n\n  /**\n   * Renders a 32px `PersonaCoin`.\n   */\n  size32 = 11,\n\n  /**\n   * Renders a 40px `PersonaCoin`.\n   */\n  size40 = 12,\n\n  /**\n   * Renders a 48px `PersonaCoin`.\n   */\n  size48 = 13,\n\n  /**\n   * Renders a 56px `PersonaCoin`.\n   */\n  size56 = 16,\n\n  /**\n   * Renders a 72px `PersonaCoin`.\n   */\n  size72 = 14,\n\n  /**\n   * Renders a 100px `PersonaCoin`.\n   */\n  size100 = 15,\n\n  /**\n   * Renders a 120px `PersonaCoin`.\n   */\n  size120 = 18,\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaPresence {\n  none = 0,\n  offline = 1,\n  online = 2,\n  away = 3,\n  dnd = 4,\n  blocked = 5,\n  busy = 6,\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaInitialsColor {\n  lightBlue = 0,\n  blue = 1,\n  darkBlue = 2,\n  teal = 3,\n  lightGreen = 4,\n  green = 5,\n  darkGreen = 6,\n  lightPink = 7,\n  pink = 8,\n  magenta = 9,\n  purple = 10,\n  /**\n   * Black can result in offensive persona coins with some initials combinations, so it can only be set with overrides.\n   * @deprecated will be removed in a future major release.\n   */\n  black = 11,\n  orange = 12,\n  /**\n   * Red often has a special meaning, so it is considered a reserved color and can only be set with overrides.\n   * @deprecated will be removed in a future major release.\n   */\n  red = 13,\n  darkRed = 14,\n  /**\n   * Transparent is not intended to be used with typical initials due to accessibility issues.\n   * Its primary use is for overflow buttons, so it is considered a reserved color and can only be set with overrides.\n   */\n  transparent = 15,\n  violet = 16,\n  lightRed = 17,\n  gold = 18,\n  burgundy = 19,\n  warmGray = 20,\n  coolGray = 21,\n  /**\n   * Gray can result in offensive persona coins with some initials combinations, so it can only be set with overrides.\n   */\n  gray = 22,\n  cyan = 23,\n  rust = 24,\n}\n","/**\n * Regular expression matching characters to ignore when calculating the initials.\n */\n/**\n * Regular expression matching characters within various types of enclosures, including the enclosures themselves\n *  so for example, (xyz) [xyz] {xyz} all would be ignored\n */\nconst UNWANTED_ENCLOSURES_REGEX: RegExp = /[\\(\\[\\{][^\\)\\]\\}]*[\\)\\]\\}]/g;\n\n/**\n * Regular expression matching special ASCII characters except space, plus some unicode special characters.\n * Applies after unwanted enclosures have been removed\n */\nconst UNWANTED_CHARS_REGEX: RegExp = /[\\0-\\u001F\\!-/:-@\\[-`\\{-\\u00BF\\u0250-\\u036F\\uD800-\\uFFFF]/g;\n\n/**\n * Regular expression matching phone numbers. Applied after chars matching UNWANTED_CHARS_REGEX have been removed\n * and number has been trimmed for whitespaces\n */\nconst PHONENUMBER_REGEX: RegExp = /^\\d+[\\d\\s]*(:?ext|x|)\\s*\\d+$/i;\n\n/** Regular expression matching one or more spaces. */\nconst MULTIPLE_WHITESPACES_REGEX: RegExp = /\\s+/g;\n\n/**\n * Regular expression matching languages for which we currently don't support initials.\n * Arabic:   Arabic, Arabic Supplement, Arabic Extended-A.\n * Korean:   Hangul Jamo, Hangul Compatibility Jamo, Hangul Jamo Extended-A, Hangul Syllables, Hangul Jamo Extended-B.\n * Japanese: Hiragana, Katakana.\n * CJK:      CJK Unified Ideographs Extension A, CJK Unified Ideographs, CJK Compatibility Ideographs,\n *             CJK Unified Ideographs Extension B\n */\n// eslint-disable-next-line @fluentui/max-len\nconst UNSUPPORTED_TEXT_REGEX: RegExp = /[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\u1100-\\u11FF\\u3130-\\u318F\\uA960-\\uA97F\\uAC00-\\uD7AF\\uD7B0-\\uD7FF\\u3040-\\u309F\\u30A0-\\u30FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD869][\\uDC00-\\uDED6]/;\n\nfunction getInitialsLatin(displayName: string, isRtl: boolean): string {\n  let initials = '';\n\n  const splits: string[] = displayName.split(' ');\n\n  if (splits.length === 2) {\n    initials += splits[0].charAt(0).toUpperCase();\n    initials += splits[1].charAt(0).toUpperCase();\n  } else if (splits.length === 3) {\n    initials += splits[0].charAt(0).toUpperCase();\n    initials += splits[2].charAt(0).toUpperCase();\n  } else if (splits.length !== 0) {\n    initials += splits[0].charAt(0).toUpperCase();\n  }\n\n  if (isRtl && initials.length > 1) {\n    return initials.charAt(1) + initials.charAt(0);\n  }\n\n  return initials;\n}\n\nfunction cleanupDisplayName(displayName: string): string {\n  displayName = displayName.replace(UNWANTED_ENCLOSURES_REGEX, '');\n  displayName = displayName.replace(UNWANTED_CHARS_REGEX, '');\n  displayName = displayName.replace(MULTIPLE_WHITESPACES_REGEX, ' ');\n  displayName = displayName.trim();\n\n  return displayName;\n}\n\n/**\n * Get (up to 2 characters) initials based on display name of the persona.\n *\n * @public\n */\nexport function getInitials(\n  displayName: string | undefined | null,\n  isRtl: boolean,\n  allowPhoneInitials?: boolean,\n): string {\n  if (!displayName) {\n    return '';\n  }\n\n  displayName = cleanupDisplayName(displayName);\n\n  // For names containing CJK characters, and phone numbers, we don't display initials\n  if (UNSUPPORTED_TEXT_REGEX.test(displayName) || (!allowPhoneInitials && PHONENUMBER_REGEX.test(displayName))) {\n    return '';\n  }\n\n  return getInitialsLatin(displayName, isRtl);\n}\n","import { PersonaPresence, PersonaSize } from './Persona.types';\n\n// Persona Sizes\nexport namespace personaSize {\n  export const size8 = '20px';\n  // TODO: remove in a future major release as it's deprecated.\n  export const size10 = '20px';\n  // TODO: remove in a future major release as it's deprecated.\n  export const size16 = '16px';\n  export const size24 = '24px';\n  // TODO: remove in a future major release as it's deprecated.\n  export const size28 = '28px';\n  export const size32 = '32px';\n  export const size40 = '40px';\n  export const size48 = '48px';\n  export const size56 = '56px';\n  export const size72 = '72px';\n  export const size100 = '100px';\n  export const size120 = '120px';\n}\n\n// Persona Presence Sizes\nexport namespace personaPresenceSize {\n  export const size6 = '6px';\n  export const size8 = '8px';\n  export const size12 = '12px';\n  export const size16 = '16px';\n  export const size20 = '20px';\n  export const size28 = '28px';\n  export const size32 = '32px';\n\n  /**\n   * @deprecated This is now unused\n   */\n  export const border = '2px';\n}\n\n// TODO: remove the deprecated parts in a future major release.\nexport const sizeBoolean = (size: PersonaSize) => ({\n  isSize8: size === PersonaSize.size8,\n  /* eslint-disable deprecation/deprecation */\n  isSize10: size === PersonaSize.size10 || size === PersonaSize.tiny,\n  isSize16: size === PersonaSize.size16,\n  isSize24: size === PersonaSize.size24 || size === PersonaSize.extraExtraSmall,\n  isSize28: size === PersonaSize.size28 || size === PersonaSize.extraSmall,\n  isSize32: size === PersonaSize.size32,\n  isSize40: size === PersonaSize.size40 || size === PersonaSize.small,\n  isSize48: size === PersonaSize.size48 || size === PersonaSize.regular,\n  isSize56: size === PersonaSize.size56,\n  isSize72: size === PersonaSize.size72 || size === PersonaSize.large,\n  isSize100: size === PersonaSize.size100 || size === PersonaSize.extraLarge,\n  isSize120: size === PersonaSize.size120,\n});\n\nexport const sizeToPixels: { [key: number]: number } = {\n  // Old deprecated sizes\n  [PersonaSize.tiny]: 10,\n  [PersonaSize.extraExtraSmall]: 24,\n  [PersonaSize.extraSmall]: 28,\n  [PersonaSize.small]: 40,\n  [PersonaSize.regular]: 48,\n  [PersonaSize.large]: 72,\n  [PersonaSize.extraLarge]: 100,\n  // New sizes\n  [PersonaSize.size8]: 8,\n  [PersonaSize.size10]: 10, // TODO: deprecated (not in the design specs)\n  [PersonaSize.size16]: 16, // TODO: deprecated (not in the design specs)\n  [PersonaSize.size24]: 24,\n  [PersonaSize.size28]: 28, // TODO: deprecated (not in the design specs)\n  /* eslint-enable deprecation/deprecation */\n  [PersonaSize.size32]: 32,\n  [PersonaSize.size40]: 40,\n  [PersonaSize.size48]: 48,\n  [PersonaSize.size56]: 56,\n  [PersonaSize.size72]: 72,\n  [PersonaSize.size100]: 100,\n  [PersonaSize.size120]: 120,\n};\n\nexport const presenceBoolean = (presence: PersonaPresence) => ({\n  isAvailable: presence === PersonaPresence.online,\n  isAway: presence === PersonaPresence.away,\n  isBlocked: presence === PersonaPresence.blocked,\n  isBusy: presence === PersonaPresence.busy,\n  isDoNotDisturb: presence === PersonaPresence.dnd,\n  isOffline: presence === PersonaPresence.offline,\n});\n","import * as React from 'react';\nimport { classNamesFunction } from '../../../Utilities';\nimport { Icon } from '../../../Icon';\nimport {\n  IPersonaPresenceProps,\n  IPersonaPresenceStyleProps,\n  IPersonaPresenceStyles,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { sizeBoolean } from '../PersonaConsts';\n\nconst coinSizeFontScaleFactor = 6;\nconst coinSizePresenceScaleFactor = 3;\nconst presenceMaxSize = 40;\nconst presenceFontMaxSize = 20;\n\nconst getClassNames = classNamesFunction<IPersonaPresenceStyleProps, IPersonaPresenceStyles>({\n  // There can be many PersonaPresence rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\n/**\n * PersonaPresence with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class PersonaPresenceBase extends React.Component<IPersonaPresenceProps, {}> {\n  constructor(props: IPersonaPresenceProps) {\n    super(props);\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      coinSize,\n      isOutOfOffice,\n      styles, // Use getStyles from props.\n      presence,\n      theme,\n      presenceTitle,\n      presenceColors,\n    } = this.props;\n    const size = sizeBoolean(this.props.size as PersonaSize);\n\n    // Render Presence Icon if Persona is above size 32.\n    const renderIcon =\n      !(size.isSize8 || size.isSize10 || size.isSize16 || size.isSize24 || size.isSize28 || size.isSize32) &&\n      (coinSize ? coinSize > 32 : true);\n\n    const presenceHeightWidth: string = coinSize\n      ? coinSize / coinSizePresenceScaleFactor < presenceMaxSize\n        ? coinSize / coinSizePresenceScaleFactor + 'px'\n        : presenceMaxSize + 'px'\n      : '';\n    const presenceFontSize: string = coinSize\n      ? coinSize / coinSizeFontScaleFactor < presenceFontMaxSize\n        ? coinSize / coinSizeFontScaleFactor + 'px'\n        : presenceFontMaxSize + 'px'\n      : '';\n    const coinSizeWithPresenceIconStyle = coinSize\n      ? { fontSize: presenceFontSize, lineHeight: presenceHeightWidth }\n      : undefined;\n    const coinSizeWithPresenceStyle = coinSize\n      ? { width: presenceHeightWidth, height: presenceHeightWidth }\n      : undefined;\n\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      presence,\n      size: this.props.size,\n      isOutOfOffice,\n      presenceColors,\n    });\n\n    if (presence === PersonaPresenceEnum.none) {\n      return null;\n    }\n\n    return (\n      <div role=\"presentation\" className={classNames.presence} style={coinSizeWithPresenceStyle} title={presenceTitle}>\n        {renderIcon && this._onRenderIcon(classNames.presenceIcon, coinSizeWithPresenceIconStyle)}\n      </div>\n    );\n  }\n\n  private _onRenderIcon = (className?: string, style?: React.CSSProperties): JSX.Element => (\n    <Icon className={className} iconName={determineIcon(this.props.presence, this.props.isOutOfOffice)} style={style} />\n  );\n}\n\nfunction determineIcon(\n  presence: PersonaPresenceEnum | undefined,\n  isOutOfOffice: boolean | undefined,\n): string | undefined {\n  if (!presence) {\n    return undefined;\n  }\n\n  const oofIcon = 'SkypeArrow';\n\n  switch (PersonaPresenceEnum[presence]) {\n    case 'online':\n      return 'SkypeCheck';\n    case 'away':\n      return isOutOfOffice ? oofIcon : 'SkypeClock';\n    case 'dnd':\n      return 'SkypeMinus';\n    case 'offline':\n      return isOutOfOffice ? oofIcon : '';\n  }\n\n  return '';\n}\n","import { IPersonaPresenceStyleProps, IPersonaPresenceStyles, PersonaPresence, PersonaSize } from '../Persona.types';\nimport { HighContrastSelector, getGlobalClassNames, IRawStyle, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { personaPresenceSize, presenceBoolean, sizeBoolean } from '../PersonaConsts';\n\nconst GlobalClassNames = {\n  presence: 'ms-Persona-presence',\n  presenceIcon: 'ms-Persona-presenceIcon',\n};\n\nexport const getStyles = (props: IPersonaPresenceStyleProps): IPersonaPresenceStyles => {\n  const { theme, presenceColors } = props;\n  const { semanticColors, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const size = sizeBoolean(props.size as PersonaSize);\n  const presence = presenceBoolean(props.presence as PersonaPresence);\n\n  // Presence colors\n  const presenceColorAvailable = (presenceColors && presenceColors.available) || '#6BB700';\n  const presenceColorAway = (presenceColors && presenceColors.away) || '#FFAA44';\n  const presenceColorBusy = (presenceColors && presenceColors.busy) || '#C43148';\n  const presenceColorDnd = (presenceColors && presenceColors.dnd) || '#C50F1F';\n  const presenceColorOffline = (presenceColors && presenceColors.offline) || '#8A8886';\n  const presenceColorOof = (presenceColors && presenceColors.oof) || '#B4009E';\n  const presenceColorBackground = (presenceColors && presenceColors.background) || semanticColors.bodyBackground;\n\n  const isOpenCirclePresence =\n    presence.isOffline ||\n    (props.isOutOfOffice && (presence.isAvailable || presence.isBusy || presence.isAway || presence.isDoNotDisturb));\n\n  const borderSizeForSmallPersonas = '1px';\n  const borderSizeForLargePersonas = '2px';\n\n  const borderSize = size.isSize72 || size.isSize100 ? borderSizeForLargePersonas : borderSizeForSmallPersonas;\n\n  return {\n    presence: [\n      classNames.presence,\n      {\n        position: 'absolute',\n        height: personaPresenceSize.size12,\n        width: personaPresenceSize.size12,\n        borderRadius: '50%',\n        top: 'auto',\n        right: '-2px',\n        bottom: '-2px',\n        border: `2px solid ${presenceColorBackground}`,\n        textAlign: 'center',\n        boxSizing: 'content-box',\n        backgroundClip: 'content-box',\n        ...getHighContrastNoAdjustStyle(),\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'Window',\n            backgroundColor: 'WindowText',\n          },\n        },\n      },\n\n      (size.isSize8 || size.isSize10) && {\n        right: 'auto',\n        top: '7px',\n        left: 0,\n        border: 0,\n\n        selectors: {\n          [HighContrastSelector]: {\n            top: '9px',\n            border: '1px solid WindowText',\n          },\n        },\n      },\n\n      (size.isSize8 || size.isSize10 || size.isSize24 || size.isSize28 || size.isSize32) &&\n        makeSizeStyle(personaPresenceSize.size8),\n\n      (size.isSize40 || size.isSize48) && makeSizeStyle(personaPresenceSize.size12),\n\n      size.isSize16 && {\n        height: personaPresenceSize.size6,\n        width: personaPresenceSize.size6,\n        borderWidth: '1.5px',\n      },\n\n      size.isSize56 && makeSizeStyle(personaPresenceSize.size16),\n\n      size.isSize72 && makeSizeStyle(personaPresenceSize.size20),\n\n      size.isSize100 && makeSizeStyle(personaPresenceSize.size28),\n\n      size.isSize120 && makeSizeStyle(personaPresenceSize.size32),\n\n      presence.isAvailable && {\n        backgroundColor: presenceColorAvailable,\n\n        selectors: {\n          [HighContrastSelector]: backgroundColor('Highlight'),\n        },\n      },\n\n      presence.isAway && backgroundColor(presenceColorAway),\n\n      presence.isBlocked && [\n        {\n          selectors: {\n            // Only show :after at larger sizes\n            ':after':\n              size.isSize40 || size.isSize48 || size.isSize72 || size.isSize100\n                ? {\n                    content: '\"\"',\n                    width: '100%',\n                    height: borderSize,\n                    backgroundColor: presenceColorBusy,\n                    transform: 'translateY(-50%) rotate(-45deg)',\n                    position: 'absolute',\n                    top: '50%',\n                    left: 0,\n                  }\n                : undefined,\n\n            [HighContrastSelector]: {\n              selectors: {\n                ':after': {\n                  width: `calc(100% - 4px)`,\n                  left: '2px',\n                  backgroundColor: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n\n      presence.isBusy && backgroundColor(presenceColorBusy),\n\n      presence.isDoNotDisturb && backgroundColor(presenceColorDnd),\n\n      presence.isOffline && backgroundColor(presenceColorOffline),\n\n      (isOpenCirclePresence || presence.isBlocked) && [\n        {\n          backgroundColor: presenceColorBackground,\n\n          selectors: {\n            ':before': {\n              content: '\"\"',\n              width: '100%',\n              height: '100%',\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              border: `${borderSize} solid ${presenceColorBusy}`,\n              borderRadius: '50%',\n              boxSizing: 'border-box',\n            },\n            [HighContrastSelector]: {\n              backgroundColor: 'WindowText',\n\n              selectors: {\n                ':before': {\n                  width: `calc(100% - 2px)`,\n                  height: `calc(100% - 2px)`,\n                  top: '1px',\n                  left: '1px',\n                  borderColor: 'Window',\n                },\n              },\n            },\n          },\n        },\n      ],\n\n      isOpenCirclePresence && presence.isAvailable && makeBeforeBorderStyle(borderSize, presenceColorAvailable),\n\n      isOpenCirclePresence && presence.isBusy && makeBeforeBorderStyle(borderSize, presenceColorBusy),\n\n      isOpenCirclePresence && presence.isAway && makeBeforeBorderStyle(borderSize, presenceColorOof),\n\n      isOpenCirclePresence && presence.isDoNotDisturb && makeBeforeBorderStyle(borderSize, presenceColorDnd),\n\n      isOpenCirclePresence && presence.isOffline && makeBeforeBorderStyle(borderSize, presenceColorOffline),\n\n      isOpenCirclePresence &&\n        presence.isOffline &&\n        props.isOutOfOffice &&\n        makeBeforeBorderStyle(borderSize, presenceColorOof),\n    ],\n\n    presenceIcon: [\n      classNames.presenceIcon,\n      {\n        color: presenceColorBackground,\n        fontSize: '6px', // exception case where we don't have an available theme.fonts variable to match it.\n        lineHeight: personaPresenceSize.size12,\n        verticalAlign: 'top',\n\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'Window',\n          },\n        },\n      },\n\n      size.isSize56 && {\n        fontSize: '8px', // exception case where we don't have an available theme.fonts variable to match it.\n        lineHeight: personaPresenceSize.size16,\n      },\n\n      size.isSize72 && {\n        fontSize: fonts.small.fontSize,\n        lineHeight: personaPresenceSize.size20,\n      },\n\n      size.isSize100 && {\n        fontSize: fonts.medium.fontSize,\n        lineHeight: personaPresenceSize.size28,\n      },\n\n      size.isSize120 && {\n        fontSize: fonts.medium.fontSize,\n        lineHeight: personaPresenceSize.size32,\n      },\n\n      presence.isAway && {\n        position: 'relative',\n        left: isOpenCirclePresence ? undefined : '1px',\n      },\n\n      isOpenCirclePresence && presence.isAvailable && makeOpenCircleIconStyle(presenceColorAvailable),\n\n      isOpenCirclePresence && presence.isBusy && makeOpenCircleIconStyle(presenceColorBusy),\n\n      isOpenCirclePresence && presence.isAway && makeOpenCircleIconStyle(presenceColorOof),\n\n      isOpenCirclePresence && presence.isDoNotDisturb && makeOpenCircleIconStyle(presenceColorDnd),\n\n      isOpenCirclePresence && presence.isOffline && makeOpenCircleIconStyle(presenceColorOffline),\n\n      isOpenCirclePresence && presence.isOffline && props.isOutOfOffice && makeOpenCircleIconStyle(presenceColorOof),\n    ],\n  };\n};\n\nfunction makeOpenCircleIconStyle(color: string): IRawStyle {\n  return {\n    color,\n    borderColor: color,\n  };\n}\n\nfunction makeBeforeBorderStyle(borderSize: string, color: string): IRawStyle {\n  return {\n    selectors: {\n      ':before': {\n        border: `${borderSize} solid ${color}`,\n      },\n    },\n  };\n}\n\nfunction makeSizeStyle(size: string): IRawStyle {\n  return {\n    height: size,\n    width: size,\n  };\n}\n\nfunction backgroundColor(color: string): IRawStyle {\n  return { backgroundColor: color };\n}\n","import * as React from 'react';\nimport { styled } from '../../../Utilities';\nimport { IPersonaPresenceProps, IPersonaPresenceStyleProps, IPersonaPresenceStyles } from '../Persona.types';\nimport { PersonaPresenceBase } from './PersonaPresence.base';\nimport { getStyles } from './PersonaPresence.styles';\n\n/**\n * PersonaPresence is used to render an individual's presence.\n */\nexport const PersonaPresence: React.FunctionComponent<IPersonaPresenceProps> = styled<\n  IPersonaPresenceProps,\n  IPersonaPresenceStyleProps,\n  IPersonaPresenceStyles\n>(PersonaPresenceBase, getStyles, undefined, { scope: 'PersonaPresence' });\n","import { PersonaInitialsColor, IPersonaProps } from './Persona.types';\n\n/**\n * Following colors are considered reserved and can only be set with overrides, so they are excluded from this set:\n * - `gray` and `black` can result in offensive persona coins with some initials combinations\n * - `red` often has a special meaning\n * - `transparent` is not intended to be used with typical initials due to accessibility issues;\n *   its primary use is for Facepile overflow buttons.\n */\nconst COLOR_SWATCHES_LOOKUP: PersonaInitialsColor[] = [\n  PersonaInitialsColor.lightBlue,\n  PersonaInitialsColor.blue,\n  PersonaInitialsColor.darkBlue,\n  PersonaInitialsColor.teal,\n  PersonaInitialsColor.green,\n  PersonaInitialsColor.darkGreen,\n  PersonaInitialsColor.lightPink,\n  PersonaInitialsColor.pink,\n  PersonaInitialsColor.magenta,\n  PersonaInitialsColor.purple,\n  PersonaInitialsColor.orange,\n  PersonaInitialsColor.lightRed,\n  PersonaInitialsColor.darkRed,\n  PersonaInitialsColor.violet,\n  PersonaInitialsColor.gold,\n  PersonaInitialsColor.burgundy,\n  PersonaInitialsColor.warmGray,\n  PersonaInitialsColor.cyan,\n  PersonaInitialsColor.rust,\n  PersonaInitialsColor.coolGray,\n];\n\nconst COLOR_SWATCHES_NUM_ENTRIES = COLOR_SWATCHES_LOOKUP.length;\n\nfunction getInitialsColorFromName(displayName: string | undefined): PersonaInitialsColor {\n  let color = PersonaInitialsColor.blue;\n  if (!displayName) {\n    return color;\n  }\n\n  let hashCode = 0;\n  for (let iLen: number = displayName.length - 1; iLen >= 0; iLen--) {\n    const ch: number = displayName.charCodeAt(iLen);\n    const shift: number = iLen % 8;\n    // eslint-disable-next-line no-bitwise\n    hashCode ^= (ch << shift) + (ch >> (8 - shift));\n  }\n\n  color = COLOR_SWATCHES_LOOKUP[hashCode % COLOR_SWATCHES_NUM_ENTRIES];\n\n  return color;\n}\n\nfunction personaInitialsColorToHexCode(personaInitialsColor: PersonaInitialsColor): string {\n  switch (personaInitialsColor) {\n    case PersonaInitialsColor.lightBlue:\n      return '#4F6BED';\n    case PersonaInitialsColor.blue:\n      return '#0078D4';\n    case PersonaInitialsColor.darkBlue:\n      return '#004E8C';\n    case PersonaInitialsColor.teal:\n      return '#038387';\n    case PersonaInitialsColor.lightGreen:\n    case PersonaInitialsColor.green:\n      return '#498205';\n    case PersonaInitialsColor.darkGreen:\n      return '#0B6A0B';\n    case PersonaInitialsColor.lightPink:\n      return '#C239B3';\n    case PersonaInitialsColor.pink:\n      return '#E3008C';\n    case PersonaInitialsColor.magenta:\n      return '#881798';\n    case PersonaInitialsColor.purple:\n      return '#5C2E91';\n    case PersonaInitialsColor.orange:\n      return '#CA5010';\n    // eslint-disable-next-line deprecation/deprecation\n    case PersonaInitialsColor.red:\n      return '#EE1111';\n    case PersonaInitialsColor.lightRed:\n      return '#D13438';\n    case PersonaInitialsColor.darkRed:\n      return '#A4262C';\n    case PersonaInitialsColor.transparent:\n      return 'transparent';\n    case PersonaInitialsColor.violet:\n      return '#8764B8';\n    case PersonaInitialsColor.gold:\n      return '#986F0B';\n    case PersonaInitialsColor.burgundy:\n      return '#750B1C';\n    case PersonaInitialsColor.warmGray:\n      return '#7A7574';\n    case PersonaInitialsColor.cyan:\n      return '#005B70';\n    case PersonaInitialsColor.rust:\n      return '#8E562E';\n    case PersonaInitialsColor.coolGray:\n      return '#69797E';\n    // eslint-disable-next-line deprecation/deprecation\n    case PersonaInitialsColor.black:\n      return '#1D1D1D';\n    case PersonaInitialsColor.gray:\n      return '#393939';\n  }\n}\n\n/** @deprecated Use `getPersonaInitialsColor` */\nexport function initialsColorPropToColorCode(props: IPersonaProps): string {\n  return getPersonaInitialsColor(props);\n}\n\n/**\n * Gets the hex color string (prefixed with #) for the given persona props.\n * This is the logic used internally by the Persona control.\n * @param props - Current persona props\n * @returns Hex color string prefixed with #\n */\nexport function getPersonaInitialsColor(props: Pick<IPersonaProps, 'primaryText' | 'text' | 'initialsColor'>): string {\n  // eslint-disable-next-line deprecation/deprecation\n  const { primaryText, text } = props;\n  let { initialsColor } = props;\n  let initialsColorCode: string;\n  if (typeof initialsColor === 'string') {\n    initialsColorCode = initialsColor;\n  } else {\n    initialsColor = initialsColor !== undefined ? initialsColor : getInitialsColorFromName(text || primaryText);\n    initialsColorCode = personaInitialsColorToHexCode(initialsColor);\n  }\n\n  return initialsColorCode;\n}\n","import * as React from 'react';\nimport {\n  warnDeprecations,\n  classNamesFunction,\n  divProperties,\n  memoizeFunction,\n  getInitials,\n  getNativeProps,\n  getRTL,\n} from '../../../Utilities';\nimport { mergeStyles } from '../../../Styling';\nimport { PersonaPresence } from '../PersonaPresence/index';\nimport { Icon } from '../../../Icon';\nimport { Image, ImageFit, ImageLoadState } from '../../../Image';\nimport {\n  IPersonaCoinProps,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles,\n  IPersonaPresenceProps,\n  PersonaInitialsColor,\n  PersonaPresence as PersonaPresenceEnum,\n  PersonaSize,\n} from '../Persona.types';\nimport { getPersonaInitialsColor } from '../PersonaInitialsColor';\nimport { sizeToPixels } from '../PersonaConsts';\n\nconst getClassNames = classNamesFunction<IPersonaCoinStyleProps, IPersonaCoinStyles>({\n  // There can be many PersonaCoin rendered with different sizes.\n  // Therefore setting a larger cache size.\n  cacheSize: 100,\n});\n\nconst getInitialsStyles = memoizeFunction(\n  (\n    className: string,\n    initialsColor: PersonaInitialsColor | string | undefined,\n    initialsTextColor: string | undefined,\n    text: string | undefined,\n    primaryText: string | undefined,\n    showUnknownPersonaCoin: boolean | undefined,\n  ) =>\n    mergeStyles(\n      className,\n      !showUnknownPersonaCoin && {\n        backgroundColor: getPersonaInitialsColor({ text, initialsColor, primaryText }),\n        color: initialsTextColor,\n      },\n    ),\n);\n\nexport interface IPersonaState {\n  isImageLoaded?: boolean;\n  isImageError?: boolean;\n}\n\n/**\n * PersonaCoin with no default styles.\n * [Use the `getStyles` API to add your own styles.](https://github.com/microsoft/fluentui/wiki/Styling)\n */\nexport class PersonaCoinBase extends React.Component<IPersonaCoinProps, IPersonaState> {\n  public static defaultProps: IPersonaCoinProps = {\n    size: PersonaSize.size48,\n    presence: PersonaPresenceEnum.none,\n    imageAlt: '',\n  };\n\n  constructor(props: IPersonaCoinProps) {\n    super(props);\n\n    if (process.env.NODE_ENV !== 'production') {\n      warnDeprecations('PersonaCoin', props, { primaryText: 'text' });\n    }\n\n    this.state = {\n      isImageLoaded: false,\n      isImageError: false,\n    };\n  }\n\n  public UNSAFE_componentWillReceiveProps(nextProps: IPersonaCoinProps): void {\n    if (nextProps.imageUrl !== this.props.imageUrl) {\n      this.setState({\n        isImageLoaded: false,\n        isImageError: false,\n      });\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className,\n      coinProps,\n      showUnknownPersonaCoin,\n      coinSize,\n      styles,\n      imageUrl,\n      initialsColor,\n      initialsTextColor,\n      isOutOfOffice,\n      /* eslint-disable deprecation/deprecation */\n      onRenderCoin = this._onRenderCoin,\n      onRenderPersonaCoin = onRenderCoin,\n      /* eslint-enable deprecation/deprecation */\n      onRenderInitials = this._onRenderInitials,\n      presence,\n      presenceTitle,\n      presenceColors,\n      // eslint-disable-next-line deprecation/deprecation\n      primaryText,\n      showInitialsUntilImageLoads,\n      text,\n      theme,\n    } = this.props;\n\n    const size = this.props.size as PersonaSize;\n    const divProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(this.props, divProperties);\n    const divCoinProps = getNativeProps<React.HTMLAttributes<HTMLDivElement>>(coinProps || {}, divProperties);\n    const coinSizeStyle = coinSize ? { width: coinSize, height: coinSize } : undefined;\n    const hideImage = showUnknownPersonaCoin;\n\n    const personaPresenceProps: IPersonaPresenceProps = {\n      coinSize,\n      isOutOfOffice,\n      presence,\n      presenceTitle,\n      presenceColors,\n      size,\n      theme,\n    };\n\n    // Use getStyles from props, or fall back to getStyles from styles file.\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      className: coinProps && coinProps.className ? coinProps.className : className,\n      size,\n      coinSize,\n      showUnknownPersonaCoin,\n    });\n\n    const shouldRenderInitials = Boolean(\n      !this.state.isImageLoaded &&\n        ((showInitialsUntilImageLoads && imageUrl) || !imageUrl || this.state.isImageError || hideImage),\n    );\n\n    return (\n      <div role=\"presentation\" {...divProps} className={classNames.coin}>\n        {// Render PersonaCoin if size is not size8. size10 and tiny need to removed after a deprecation cleanup.\n        // eslint-disable-next-line deprecation/deprecation\n        size !== PersonaSize.size8 && size !== PersonaSize.size10 && size !== PersonaSize.tiny ? (\n          <div role=\"presentation\" {...divCoinProps} className={classNames.imageArea} style={coinSizeStyle}>\n            {shouldRenderInitials && (\n              <div\n                className={getInitialsStyles(\n                  classNames.initials,\n                  initialsColor,\n                  initialsTextColor,\n                  text,\n                  primaryText,\n                  showUnknownPersonaCoin,\n                )}\n                style={coinSizeStyle}\n                aria-hidden=\"true\"\n              >\n                {onRenderInitials(this.props, this._onRenderInitials)}\n              </div>\n            )}\n            {!hideImage && onRenderPersonaCoin(this.props, this._onRenderCoin)}\n            <PersonaPresence {...personaPresenceProps} />\n          </div>\n        ) : // Otherwise, render just PersonaPresence.\n        this.props.presence ? (\n          <PersonaPresence {...personaPresenceProps} />\n        ) : (\n          // Just render Contact Icon if there isn't a Presence prop.\n          <Icon iconName=\"Contact\" className={classNames.size10WithoutPresenceIcon} />\n        )}\n        {this.props.children}\n      </div>\n    );\n  }\n\n  private _onRenderCoin = (props: IPersonaCoinProps): JSX.Element | null => {\n    const {\n      coinSize,\n      styles,\n      imageUrl,\n      imageAlt,\n      imageShouldFadeIn,\n      imageShouldStartVisible,\n      theme,\n      showUnknownPersonaCoin,\n    } = this.props;\n\n    // Render the Image component only if an image URL is provided\n    if (!imageUrl) {\n      return null;\n    }\n\n    const size = this.props.size as PersonaSize;\n\n    const classNames = getClassNames(styles, {\n      theme: theme!,\n      size,\n      showUnknownPersonaCoin,\n    });\n\n    const dimension = coinSize || sizeToPixels[size];\n\n    return (\n      <Image\n        className={classNames.image}\n        imageFit={ImageFit.cover}\n        src={imageUrl}\n        width={dimension}\n        height={dimension}\n        alt={imageAlt}\n        shouldFadeIn={imageShouldFadeIn}\n        shouldStartVisible={imageShouldStartVisible}\n        onLoadingStateChange={this._onPhotoLoadingStateChange}\n      />\n    );\n  };\n\n  /**\n   * Deprecation helper for getting text.\n   */\n  private _getText(): string {\n    // eslint-disable-next-line deprecation/deprecation\n    return this.props.text || this.props.primaryText || '';\n  }\n\n  private _onRenderInitials = (props: IPersonaCoinProps): JSX.Element => {\n    let { imageInitials } = props;\n    const { allowPhoneInitials, showUnknownPersonaCoin } = props;\n\n    if (showUnknownPersonaCoin) {\n      return <Icon iconName=\"Help\" />;\n    }\n\n    const isRTL = getRTL(this.props.theme);\n\n    imageInitials = imageInitials || getInitials(this._getText(), isRTL, allowPhoneInitials);\n\n    return imageInitials !== '' ? <span>{imageInitials}</span> : <Icon iconName=\"Contact\" />;\n  };\n\n  private _onPhotoLoadingStateChange = (loadState: ImageLoadState) => {\n    this.setState({\n      isImageLoaded: loadState === ImageLoadState.loaded,\n      isImageError: loadState === ImageLoadState.error,\n    });\n\n    this.props.onPhotoLoadingStateChange && this.props.onPhotoLoadingStateChange(loadState);\n  };\n}\n","import { IPersonaCoinStyleProps, IPersonaCoinStyles, PersonaSize } from '../Persona.types';\nimport { HighContrastSelector, FontWeights, getGlobalClassNames, getHighContrastNoAdjustStyle } from '../../../Styling';\nimport { sizeBoolean, sizeToPixels } from '../PersonaConsts';\n\nconst GlobalClassNames = {\n  coin: 'ms-Persona-coin',\n  imageArea: 'ms-Persona-imageArea',\n  image: 'ms-Persona-image',\n  initials: 'ms-Persona-initials',\n  size8: 'ms-Persona--size8',\n  size10: 'ms-Persona--size10',\n  size16: 'ms-Persona--size16',\n  size24: 'ms-Persona--size24',\n  size28: 'ms-Persona--size28',\n  size32: 'ms-Persona--size32',\n  size40: 'ms-Persona--size40',\n  size48: 'ms-Persona--size48',\n  size56: 'ms-Persona--size56',\n  size72: 'ms-Persona--size72',\n  size100: 'ms-Persona--size100',\n  size120: 'ms-Persona--size120',\n};\n\nexport const getStyles = (props: IPersonaCoinStyleProps): IPersonaCoinStyles => {\n  const { className, theme, coinSize } = props;\n\n  const { palette, fonts } = theme;\n\n  const size = sizeBoolean(props.size as PersonaSize);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // Static colors used when displaying 'unknown persona' coin\n  const unknownPersonaBackgroundColor = 'rgb(234, 234, 234)';\n  const unknownPersonaFontColor = 'rgb(168, 0, 0)';\n\n  const dimension = coinSize || (props.size && sizeToPixels[props.size]) || 48;\n\n  return {\n    coin: [\n      classNames.coin,\n      fonts.medium,\n      size.isSize8 && classNames.size8,\n      size.isSize10 && classNames.size10,\n      size.isSize16 && classNames.size16,\n      size.isSize24 && classNames.size24,\n      size.isSize28 && classNames.size28,\n      size.isSize32 && classNames.size32,\n      size.isSize40 && classNames.size40,\n      size.isSize48 && classNames.size48,\n      size.isSize56 && classNames.size56,\n      size.isSize72 && classNames.size72,\n      size.isSize100 && classNames.size100,\n      size.isSize120 && classNames.size120,\n      className,\n    ],\n\n    size10WithoutPresenceIcon: {\n      fontSize: fonts.xSmall.fontSize,\n      position: 'absolute',\n      top: '5px',\n      right: 'auto',\n      left: 0,\n    },\n\n    imageArea: [\n      classNames.imageArea,\n      {\n        position: 'relative',\n        textAlign: 'center',\n        flex: '0 0 auto',\n        height: dimension,\n        width: dimension,\n      },\n\n      dimension <= 10 && {\n        overflow: 'visible',\n        background: 'transparent',\n        height: 0,\n        width: 0,\n      },\n    ],\n\n    image: [\n      classNames.image,\n      {\n        marginRight: '10px',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100%',\n        border: 0,\n        borderRadius: '50%',\n        perspective: '1px',\n      },\n\n      dimension <= 10 && {\n        overflow: 'visible',\n        background: 'transparent',\n        height: 0,\n        width: 0,\n      },\n\n      dimension > 10 && {\n        height: dimension,\n        width: dimension,\n      },\n    ],\n\n    initials: [\n      classNames.initials,\n      {\n        borderRadius: '50%',\n        color: props.showUnknownPersonaCoin ? unknownPersonaFontColor : palette.white,\n        fontSize: fonts.large.fontSize,\n        fontWeight: FontWeights.semibold,\n        // copying the logic for the dimensions; defaulted to 46 for size48\n        lineHeight: dimension === 48 ? 46 : dimension,\n        height: dimension,\n\n        selectors: {\n          [HighContrastSelector]: {\n            border: '1px solid WindowText',\n            ...getHighContrastNoAdjustStyle(),\n            color: 'WindowText',\n            boxSizing: 'border-box',\n            backgroundColor: 'Window !important',\n          },\n          i: {\n            fontWeight: FontWeights.semibold,\n          },\n        },\n      },\n\n      props.showUnknownPersonaCoin && {\n        backgroundColor: unknownPersonaBackgroundColor,\n      },\n\n      dimension < 32 && {\n        fontSize: fonts.xSmall.fontSize,\n      },\n\n      dimension >= 32 &&\n        dimension < 40 && {\n          fontSize: fonts.medium.fontSize,\n        },\n\n      dimension >= 40 &&\n        dimension < 56 && {\n          fontSize: fonts.mediumPlus.fontSize,\n        },\n\n      dimension >= 56 &&\n        dimension < 72 && {\n          fontSize: fonts.xLarge.fontSize,\n        },\n\n      dimension >= 72 &&\n        dimension < 100 && {\n          fontSize: fonts.xxLarge.fontSize,\n        },\n\n      dimension >= 100 && {\n        fontSize: fonts.superLarge.fontSize,\n      },\n    ],\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../../Utilities';\nimport { IPersonaCoinProps, IPersonaCoinStyleProps, IPersonaCoinStyles } from '../Persona.types';\nimport { PersonaCoinBase } from './PersonaCoin.base';\nimport { getStyles } from './PersonaCoin.styles';\n\n/**\n * PersonaCoin is used to render an individual's avatar and presence.\n */\nexport const PersonaCoin: React.FunctionComponent<IPersonaCoinProps> = styled<\n  IPersonaCoinProps,\n  IPersonaCoinStyleProps,\n  IPersonaCoinStyles\n>(PersonaCoinBase, getStyles, undefined, {\n  scope: 'PersonaCoin',\n});\n","import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardActivityProps,\n  IDocumentCardActivityPerson,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles,\n} from './DocumentCardActivity.types';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { PersonaSize } from '../../Persona';\nimport { PersonaCoin } from '../../PersonaCoin';\n\nconst getClassNames = classNamesFunction<IDocumentCardActivityStyleProps, IDocumentCardActivityStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardActivityBase extends React.Component<IDocumentCardActivityProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardActivityStyles>;\n\n  constructor(props: IDocumentCardActivityProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element | null {\n    const { activity, people, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      multiplePeople: people.length > 1,\n    });\n\n    if (!people || people.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className={this._classNames.root}>\n        {this._renderAvatars(people)}\n        <div className={this._classNames.details}>\n          <span className={this._classNames.name}>{this._getNameString(people)}</span>\n          <span className={this._classNames.activity}>{activity}</span>\n        </div>\n      </div>\n    );\n  }\n\n  private _renderAvatars(people: IDocumentCardActivityPerson[]): React.ReactElement<{}> {\n    return (\n      <div className={this._classNames.avatars}>\n        {people.length > 1 ? this._renderAvatar(people[1]) : null}\n        {this._renderAvatar(people[0])}\n      </div>\n    );\n  }\n\n  private _renderAvatar(person: IDocumentCardActivityPerson): JSX.Element {\n    return (\n      <div className={this._classNames.avatar}>\n        <PersonaCoin\n          imageInitials={person.initials}\n          text={person.name}\n          imageUrl={person.profileImageSrc}\n          initialsColor={person.initialsColor}\n          allowPhoneInitials={person.allowPhoneInitials}\n          role=\"presentation\"\n          size={PersonaSize.size32}\n        />\n      </div>\n    );\n  }\n\n  private _getNameString(people: IDocumentCardActivityPerson[]): string {\n    let nameString = people[0].name;\n\n    if (people.length >= 2) {\n      nameString += ' +' + (people.length - 1);\n    }\n\n    return nameString;\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardActivityBase } from './DocumentCardActivity.base';\nimport { getStyles } from './DocumentCardActivity.styles';\nimport {\n  IDocumentCardActivityProps,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles,\n} from './DocumentCardActivity.types';\n\nexport const DocumentCardActivity: React.FunctionComponent<IDocumentCardActivityProps> = styled<\n  IDocumentCardActivityProps,\n  IDocumentCardActivityStyleProps,\n  IDocumentCardActivityStyles\n>(DocumentCardActivityBase, getStyles, undefined, { scope: 'DocumentCardActivity' });\n","import * as React from 'react';\nimport { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\nimport {\n  initializeComponentRef,\n  warnDeprecations,\n  getId,\n  KeyCodes,\n  classNamesFunction,\n  getNativeProps,\n  inputProperties,\n} from '../../Utilities';\n\nimport { IconButton } from '../../Button';\nimport { Icon } from '../../Icon';\n\nconst getClassNames = classNamesFunction<ISearchBoxStyleProps, ISearchBoxStyles>();\nconst COMPONENT_NAME = 'SearchBox';\n\nexport interface ISearchBoxState {\n  value?: string;\n  hasFocus?: boolean;\n}\n\nexport class SearchBoxBase extends React.Component<ISearchBoxProps, ISearchBoxState> {\n  public static defaultProps: Pick<ISearchBoxProps, 'disableAnimation' | 'clearButtonProps'> = {\n    disableAnimation: false,\n    clearButtonProps: { ariaLabel: 'Clear text' },\n  };\n\n  private _rootElement = React.createRef<HTMLDivElement>();\n  private _inputElement = React.createRef<HTMLInputElement>();\n  private _latestValue: string;\n  private _fallbackId: string;\n\n  public constructor(props: ISearchBoxProps) {\n    super(props);\n\n    initializeComponentRef(this);\n\n    warnDeprecations(COMPONENT_NAME, props, {\n      labelText: 'placeholder',\n      defaultValue: 'value',\n    });\n\n    this._latestValue = props.value || '';\n    this._fallbackId = getId(COMPONENT_NAME);\n\n    this.state = {\n      value: this._latestValue,\n      hasFocus: false,\n    };\n  }\n\n  public UNSAFE_componentWillReceiveProps(newProps: ISearchBoxProps): void {\n    if (newProps.value !== undefined) {\n      this._latestValue = newProps.value;\n      // If the user passes in null, substitute an empty string\n      // (passing null is not allowed per typings, but users might do it anyway)\n      this.setState({\n        value: newProps.value || '',\n      });\n    }\n  }\n\n  public render() {\n    const {\n      ariaLabel,\n      placeholder,\n      className,\n      disabled,\n      underlined,\n      styles,\n      // eslint-disable-next-line deprecation/deprecation\n      labelText,\n      theme,\n      clearButtonProps,\n      disableAnimation,\n      iconProps,\n      role,\n      id = this._fallbackId,\n    } = this.props;\n    const { value, hasFocus } = this.state;\n    const placeholderValue = placeholder !== undefined ? placeholder : labelText;\n\n    const classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      underlined,\n      hasFocus,\n      disabled,\n      hasInput: value!.length > 0,\n      disableAnimation,\n    });\n\n    const nativeProps = getNativeProps<React.InputHTMLAttributes<HTMLInputElement>>(this.props, inputProperties, [\n      'className',\n      'placeholder',\n      'onFocus',\n      'onBlur',\n      'value',\n      'role',\n    ]);\n\n    return (\n      <div role={role} ref={this._rootElement} className={classNames.root} onFocusCapture={this._onFocusCapture}>\n        <div className={classNames.iconContainer} onClick={this._onClickFocus} aria-hidden={true}>\n          <Icon iconName=\"Search\" {...iconProps} className={classNames.icon} />\n        </div>\n        <input\n          {...nativeProps}\n          id={id}\n          className={classNames.field}\n          placeholder={placeholderValue}\n          onChange={this._onInputChange}\n          onInput={this._onInputChange}\n          onBlur={this._onBlur}\n          onKeyDown={this._onKeyDown}\n          value={value}\n          disabled={disabled}\n          role=\"searchbox\"\n          aria-label={ariaLabel}\n          ref={this._inputElement}\n        />\n        {value!.length > 0 && (\n          <div className={classNames.clearButton}>\n            <IconButton\n              onBlur={this._onBlur}\n              styles={{ root: { height: 'auto' }, icon: { fontSize: '12px' } }}\n              iconProps={{ iconName: 'Clear' }}\n              {...clearButtonProps}\n              onClick={this._onClearClick}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  /**\n   * Sets focus to the search box input field\n   */\n  public focus() {\n    if (this._inputElement.current) {\n      this._inputElement.current.focus();\n    }\n  }\n\n  /**\n   * Returns whether or not the SearchBox has focus\n   */\n  public hasFocus(): boolean {\n    return !!this.state.hasFocus;\n  }\n\n  private _onClear(ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement> | React.KeyboardEvent<HTMLElement>) {\n    this.props.onClear && this.props.onClear(ev);\n    if (!ev.defaultPrevented) {\n      this._latestValue = '';\n      this.setState({\n        value: '',\n      });\n      this._callOnChange(undefined, '');\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      this.focus();\n    }\n  }\n\n  private _onClickFocus = () => {\n    const inputElement = this._inputElement.current;\n    if (inputElement) {\n      this.focus();\n      inputElement.selectionStart = inputElement.selectionEnd = 0;\n    }\n  };\n\n  private _onFocusCapture = (ev: React.FocusEvent<HTMLElement>) => {\n    this.setState({\n      hasFocus: true,\n    });\n\n    if (this.props.onFocus) {\n      this.props.onFocus(ev as React.FocusEvent<HTMLInputElement>);\n    }\n  };\n\n  private _onClearClick = (ev: React.MouseEvent<HTMLAnchorElement | HTMLButtonElement>) => {\n    const { clearButtonProps } = this.props;\n\n    if (clearButtonProps && clearButtonProps.onClick) {\n      clearButtonProps.onClick(ev);\n    }\n\n    if (!ev.defaultPrevented) {\n      this._onClear(ev);\n    }\n  };\n\n  private _onKeyDown = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    switch (ev.which) {\n      case KeyCodes.escape:\n        this.props.onEscape && this.props.onEscape(ev);\n        // Only call onClear if the search box has a value to clear. Otherwise, allow the Esc key\n        // to propagate from the empty search box to a parent element such as a dialog, etc.\n        if (this.state.value && !ev.defaultPrevented) {\n          this._onClear(ev);\n        }\n        break;\n\n      case KeyCodes.enter:\n        if (this.props.onSearch) {\n          this.props.onSearch(this.state.value);\n          ev.preventDefault();\n          ev.stopPropagation();\n        }\n        break;\n\n      default:\n        this.props.onKeyDown && this.props.onKeyDown(ev);\n        if (ev.defaultPrevented) {\n          ev.stopPropagation();\n        }\n        break;\n    }\n  };\n\n  private _onBlur = (ev: React.FocusEvent<HTMLInputElement>): void => {\n    this.setState({\n      hasFocus: false,\n    });\n\n    if (this.props.onBlur) {\n      this.props.onBlur(ev);\n    }\n  };\n\n  private _onInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const value = ev.target.value;\n\n    if (value === this._latestValue) {\n      return;\n    }\n    this._latestValue = value;\n\n    this.setState({ value });\n    this._callOnChange(ev, value);\n  };\n\n  private _callOnChange(ev?: React.ChangeEvent<HTMLInputElement>, newValue?: string): void {\n    // eslint-disable-next-line deprecation/deprecation\n    const { onChange, onChanged } = this.props;\n\n    // Call @deprecated method.\n    if (onChanged) {\n      onChanged(newValue);\n    }\n\n    if (onChange) {\n      onChange(ev, newValue);\n    }\n  }\n}\n","import {\n  HighContrastSelector,\n  AnimationVariables,\n  normalize,\n  IStyle,\n  getPlaceholderStyles,\n  getGlobalClassNames,\n  getInputFocusStyle,\n} from '../../Styling';\nimport { ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\nimport { getRTL } from '../../Utilities';\n\nconst GlobalClassNames = {\n  root: 'ms-SearchBox',\n  iconContainer: 'ms-SearchBox-iconContainer',\n  icon: 'ms-SearchBox-icon',\n  clearButton: 'ms-SearchBox-clearButton',\n  field: 'ms-SearchBox-field',\n};\n\nexport function getStyles(props: ISearchBoxStyleProps): ISearchBoxStyles {\n  const { theme, underlined, disabled, hasFocus, className, hasInput, disableAnimation } = props;\n  const { palette, fonts, semanticColors, effects } = theme;\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  // placeholder style constants\n  const placeholderStyles: IStyle = {\n    color: semanticColors.inputPlaceholderText,\n    opacity: 1,\n  };\n\n  const inputIconAlt = palette.neutralSecondary;\n  const inputIconAltHovered = palette.neutralPrimary;\n  const inputBorderDisabled = palette.neutralLighter;\n  const inputBackgroundHovered = palette.neutralLighter;\n  const inputBackgroundDisabled = palette.neutralLighter;\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      normalize,\n      {\n        color: semanticColors.inputText,\n        backgroundColor: semanticColors.inputBackground,\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'nowrap',\n        alignItems: 'stretch',\n        // The 1px top and bottom padding ensure the input field does not overlap the border\n        padding: '1px 0 1px 4px',\n        borderRadius: effects.roundedCorner2,\n        border: `1px solid ${semanticColors.inputBorder}`,\n        height: 32,\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'WindowText',\n          },\n          ':hover': {\n            borderColor: semanticColors.inputBorderHovered,\n            selectors: {\n              [HighContrastSelector]: {\n                borderColor: 'Highlight',\n              },\n            },\n          },\n          [`:hover .${classNames.iconContainer}`]: {\n            color: semanticColors.inputIconHovered,\n          },\n        },\n      },\n      !hasFocus &&\n        hasInput && {\n          selectors: {\n            [`:hover .${classNames.iconContainer}`]: {\n              width: 4,\n            },\n            [`:hover .${classNames.icon}`]: {\n              opacity: 0,\n              pointerEvents: 'none',\n            },\n          },\n        },\n      hasFocus && [\n        'is-active',\n        {\n          position: 'relative',\n        },\n        getInputFocusStyle(\n          semanticColors.inputFocusBorderAlt,\n          underlined ? 0 : effects.roundedCorner2,\n          underlined ? 'borderBottom' : 'border',\n        ),\n      ],\n      disabled && [\n        'is-disabled',\n        {\n          borderColor: inputBorderDisabled,\n          backgroundColor: inputBackgroundDisabled,\n          pointerEvents: 'none',\n          cursor: 'default',\n          selectors: {\n            [HighContrastSelector]: {\n              borderColor: 'GrayText',\n            },\n          },\n        },\n      ],\n      underlined && [\n        'is-underlined',\n        {\n          borderWidth: '0 0 1px 0',\n          borderRadius: 0,\n          // Underlined SearchBox has a larger padding left to vertically align with the waffle in product\n          padding: '1px 0 1px 8px',\n        },\n      ],\n      underlined &&\n        disabled && {\n          backgroundColor: 'transparent',\n        },\n      hasInput && 'can-clear',\n      className,\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexShrink: 0,\n        fontSize: 16,\n        width: 32,\n        textAlign: 'center',\n        color: semanticColors.inputIcon,\n        cursor: 'text',\n      },\n      hasFocus && {\n        width: 4,\n      },\n      disabled && {\n        color: semanticColors.inputIconDisabled,\n      },\n      !disableAnimation && {\n        transition: `width ${AnimationVariables.durationValue1}`,\n      },\n    ],\n    icon: [\n      classNames.icon,\n      {\n        opacity: 1,\n      },\n      hasFocus && {\n        opacity: 0,\n        pointerEvents: 'none',\n      },\n      !disableAnimation && {\n        transition: `opacity ${AnimationVariables.durationValue1} 0s`,\n      },\n    ],\n    clearButton: [\n      classNames.clearButton,\n      {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'stretch',\n        cursor: 'pointer',\n        flexBasis: '32px',\n        flexShrink: 0,\n        padding: 0,\n        margin: '-1px 0px',\n        selectors: {\n          '&:hover .ms-Button': {\n            backgroundColor: inputBackgroundHovered,\n          },\n          '&:hover .ms-Button-icon': {\n            color: inputIconAltHovered,\n          },\n          '.ms-Button': {\n            borderRadius: getRTL(theme) ? '1px 0 0 1px' : '0 1px 1px 0',\n          },\n          '.ms-Button-icon': {\n            color: inputIconAlt,\n          },\n        },\n      },\n    ],\n    field: [\n      classNames.field,\n      normalize,\n      getPlaceholderStyles(placeholderStyles),\n      {\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        fontWeight: 'inherit',\n        fontFamily: 'inherit',\n        fontSize: 'inherit',\n        color: semanticColors.inputText,\n        flex: '1 1 0px',\n        // The default implicit value of 'auto' prevents the input from shrinking. Setting min-width to\n        // 0px allows the input element to shrink to fit the container.\n        minWidth: '0px',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        // This padding forces the text placement to round up.\n        paddingBottom: 0.5,\n        // This removes the IE specific clear button in the input since we implimented our own\n        selectors: {\n          '::-ms-clear': {\n            display: 'none',\n          },\n        },\n      },\n      disabled && {\n        color: semanticColors.disabledText,\n      },\n    ],\n  };\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { SearchBoxBase } from './SearchBox.base';\nimport { ISearchBoxProps, ISearchBoxStyleProps, ISearchBoxStyles } from './SearchBox.types';\nimport { getStyles } from './SearchBox.styles';\n\nexport const SearchBox: React.FunctionComponent<ISearchBoxProps> = styled<\n  ISearchBoxProps,\n  ISearchBoxStyleProps,\n  ISearchBoxStyles\n>(SearchBoxBase, getStyles, undefined, { scope: 'SearchBox' });\n","import * as React from 'react';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport { Icon } from '../../Icon';\nimport {\n  IDocumentCardActionsProps,\n  IDocumentCardActionsStyleProps,\n  IDocumentCardActionsStyles,\n} from './DocumentCardActions.types';\nimport { IconButton } from '../../Button';\nimport { IProcessedStyleSet } from '../../Styling';\n\nconst getClassNames = classNamesFunction<IDocumentCardActionsStyleProps, IDocumentCardActionsStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardActionsBase extends React.Component<IDocumentCardActionsProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardActionsStyles>;\n\n  constructor(props: IDocumentCardActionsProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { actions, views, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    return (\n      <div className={this._classNames.root}>\n        {actions &&\n          actions.map((action, index) => {\n            return (\n              <div className={this._classNames.action} key={index}>\n                <IconButton {...action} />\n              </div>\n            );\n          })}\n\n        {views! > 0 && (\n          <div className={this._classNames.views}>\n            <Icon iconName=\"View\" className={this._classNames.viewsIcon} />\n            {views}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import { getGlobalClassNames } from '../../Styling';\nimport { IDocumentCardActionsStyleProps, IDocumentCardActionsStyles } from './DocumentCardActions.types';\n\nconst ACTION_SIZE = 34;\nconst HORIZONTAL_PADDING = 12;\nconst VERTICAL_PADDING = 4;\n\nconst GlobalClassNames = {\n  root: 'ms-DocumentCardActions',\n  action: 'ms-DocumentCardActions-action',\n  views: 'ms-DocumentCardActions-views',\n};\n\nexport const getStyles = (props: IDocumentCardActionsStyleProps): IDocumentCardActionsStyles => {\n  const { className, theme } = props;\n  const { palette, fonts } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      {\n        height: `${ACTION_SIZE}px`,\n        padding: `${VERTICAL_PADDING}px ${HORIZONTAL_PADDING}px`,\n        position: 'relative',\n      },\n      className,\n    ],\n    action: [\n      classNames.action,\n      {\n        float: 'left',\n        marginRight: '4px',\n        color: palette.neutralSecondary,\n        cursor: 'pointer',\n\n        selectors: {\n          '.ms-Button': {\n            fontSize: fonts.mediumPlus.fontSize,\n            height: ACTION_SIZE,\n            width: ACTION_SIZE,\n          },\n          '.ms-Button:hover .ms-Button-icon': {\n            color: theme.semanticColors.buttonText,\n            cursor: 'pointer',\n          },\n        },\n      },\n    ],\n    views: [\n      classNames.views,\n      {\n        textAlign: 'right',\n        lineHeight: ACTION_SIZE,\n      },\n    ],\n    viewsIcon: {\n      marginRight: '8px',\n      fontSize: fonts.medium.fontSize,\n      verticalAlign: 'top',\n    },\n  };\n};\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardActionsBase } from './DocumentCardActions.base';\nimport { getStyles } from './DocumentCardActions.styles';\nimport {\n  IDocumentCardActionsProps,\n  IDocumentCardActionsStyleProps,\n  IDocumentCardActionsStyles,\n} from './DocumentCardActions.types';\n\nexport const DocumentCardActions: React.FunctionComponent<IDocumentCardActionsProps> = styled<\n  IDocumentCardActionsProps,\n  IDocumentCardActionsStyleProps,\n  IDocumentCardActionsStyles\n>(DocumentCardActionsBase, getStyles, undefined, { scope: 'DocumentCardActions' });\n","import * as React from 'react';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { classNamesFunction, initializeComponentRef } from '../../Utilities';\nimport {\n  IDocumentCardLocationProps,\n  IDocumentCardLocationStyleProps,\n  IDocumentCardLocationStyles,\n} from './DocumentCardLocation.types';\n\nconst getClassNames = classNamesFunction<IDocumentCardLocationStyleProps, IDocumentCardLocationStyles>();\n\n/**\n * {@docCategory DocumentCard}\n */\nexport class DocumentCardLocationBase extends React.Component<IDocumentCardLocationProps, any> {\n  private _classNames: IProcessedStyleSet<IDocumentCardLocationStyles>;\n\n  constructor(props: IDocumentCardLocationProps) {\n    super(props);\n\n    initializeComponentRef(this);\n  }\n\n  public render(): JSX.Element {\n    const { location, locationHref, ariaLabel, onClick, styles, theme, className } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n    });\n\n    return (\n      <a className={this._classNames.root} href={locationHref} onClick={onClick} aria-label={ariaLabel}>\n        {location}\n      </a>\n    );\n  }\n}\n","import * as React from 'react';\nimport { styled } from '../../Utilities';\nimport { DocumentCardLocationBase } from './DocumentCardLocation.base';\nimport { getStyles } from './DocumentCardLocation.styles';\nimport {\n  IDocumentCardLocationProps,\n  IDocumentCardLocationStyleProps,\n  IDocumentCardLocationStyles,\n} from './DocumentCardLocation.types';\n\nexport const DocumentCardLocation: React.FunctionComponent<IDocumentCardLocationProps> = styled<\n  IDocumentCardLocationProps,\n  IDocumentCardLocationStyleProps,\n  IDocumentCardLocationStyles\n>(DocumentCardLocationBase, getStyles, undefined, { scope: 'DocumentCardLocation' });\n"],"sourceRoot":""}