{"version":3,"sources":["sources/RepositoryUtils.js","components/WebAddinWriter/WriteComponents/pages/fillFinanceTable/index.js"],"names":["GetRealData","response","GetRealDataOfYear","GetRealDataOfFinance","JsonToTree","JsonStr","SearchKey","tmpJson","indexOf","JsonObj","JSON","parse","p","title","substring","lastIndexOf","key","subJson","s","lastJson","subjsonstr","stringify","push","length","children","ConvertJsonToTree","jsonArray","TreeJson","a","child","console","log","ConvertJsonToTreeOfYear","ConvertJsonToTreeOfFinance","numOfFinance","TreeAndNumber","lastNum","value","locationTable","numData","checkedIDs","onSelect","selectedKeys","info","keyToPosition","CurRange","wps","WpsApplication","Selection","Range","Columns","Count","position","Item","Index","Rows","onCheck","checkedKeys","detialTaskpane","props","reloaddata","state","useData","location","undefined","Company","handlePost","apiWritePath","then","result","success","realdata","treeData","setState","error","insertdata","selectData","this","onClick","bind","checkable","Component"],"mappings":"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","file":"static/js/24.b3e8060b.chunk.js","sourcesContent":["import Tree from \"rc-tree\";\n\nexport function GetRealData(response) {\n  //获得实际数据\n  if (response[\"success\"]) {\n    if (response[\"head\"] == null) {\n      if (response[\"msg\"] == null) {\n        return \"\";\n      } else {\n        return response[\"msg\"];\n      }\n    } else {\n      return '{\"head\":' + response[\"head\"] + ',\"data\":' + response[\"msg\"] + \"}\";\n    }\n  } else {\n    return \"\";\n  }\n}\n\nexport function GetRealDataOfYear(response) {\n  //获得实际数据\n  if (response[\"success\"]) {\n    if (response[\"head\"] != null) {\n      if (response[\"msg\"] == null) {\n        return \"\";\n      } else {\n        return response[\"msg\"];\n      }\n    } else {\n      return '{\"head\":' + response[\"head\"] + ',\"data\":' + response[\"msg\"] + \"}\";\n    }\n  } else {\n    return \"\";\n  }\n}\n\nexport function GetRealDataOfFinance(response) {\n  //获得实际数据\n  if (response[\"success\"]) {\n    if (response[\"head\"] == null) {\n      if (response[\"msg\"] == null) {\n        return \"\";\n      } else {\n        return response[\"msg\"];\n      }\n    } else {\n      return '{\"head\":' + response[\"head\"] + ',\"data\":' + response[\"msg\"] + \"}\";\n    }\n  } else {\n    return \"\";\n  }\n}\n\nfunction JsonToTree(JsonStr, SearchKey) {\n  //将json转换为antidesign tree控件的数据源\n  //思路：遍历重建\n  //https://blog.csdn.net/xujie3/article/details/52954940\n  var tmpJson = {};\n  if (JsonStr.indexOf(SearchKey) !== -1) {\n    var JsonObj = JSON.parse(JsonStr);\n    for (var p in JsonObj) {\n      //遍历json数组\n      let title = p.substring(p.indexOf(\"_\") + 1);\n      tmpJson.title = title.substring(0, title.lastIndexOf(\":\"));\n      tmpJson.key = title.substring(title.lastIndexOf(\":\") + 1);\n      let subJson = [];\n      for (var s in JsonObj[p]) {\n        let lastJson = {};\n        if (JsonObj[p][s] !== \"\") {\n          let subjsonstr = '{\"' + s + '\":' + JSON.stringify(JsonObj[p][s]) + \"}\";\n          lastJson = JsonToTree(subjsonstr, SearchKey);\n          if (subjsonstr.indexOf(SearchKey) !== -1) {\n            subJson.push(lastJson);\n          }\n        } else {\n          //console.log(\"s:\", s);\n          if (s.indexOf(SearchKey) !== -1) {\n            let title = s.substring(s.indexOf(\"_\") + 1);\n            lastJson.title = title.substring(0, title.lastIndexOf(\":\"));\n            lastJson.key = title.substring(title.lastIndexOf(\":\") + 1);\n            subJson.push(lastJson);\n          }\n        }\n      }\n      if (subJson.length > 0) {\n        tmpJson.children = subJson;\n      }\n    }\n  }\nreturn tmpJson;\n}\n\nexport function ConvertJsonToTree(jsonArray, SearchKey) {\n  //将json转换为antidesign tree控件的数据源，要用到递归\n  var TreeJson = [];\n  for (var a in jsonArray) {\n    //遍历json数组时，这么写p为索引，0,1\n    //console.log(a);\n    //console.log(\"JsonStr:\", jsonArray[a][\"文本元结构\"]);\n    let child = JsonToTree(jsonArray[a][\"文本元结构\"], SearchKey);\n    //console.log(\"child:\", JSON.stringify(child) === \"{}\");\n    if (JSON.stringify(child) !== \"{}\") {\n      TreeJson.push(child);\n    }\n  }\n  console.log(\"TreeJson:\", TreeJson);\n  return TreeJson;\n}\n\nexport function ConvertJsonToTreeOfYear(jsonArray) {\n  //将json转换为antidesign tree控件的数据源，要用到递归\n  var TreeJson = [];\n  for (var a in jsonArray) {\n    //遍历json数组时，这么写p为索引，0,1\n    console.log(a);\n    console.log(\"JsonStr:\", jsonArray[a]);\n    let lastJson = {};\n    lastJson.title = jsonArray[a][\"年份\"];\n    lastJson.key = a;\n    TreeJson.push(lastJson);\n  }\n  console.log(\"TreeJson:\", TreeJson);\n  return TreeJson;\n}\n\nexport function ConvertJsonToTreeOfFinance(jsonArray) {\n  //将json转换为antidesign tree控件的数据源，要用到递归\n  var TreeJson = [];\n  var numOfFinance = [];\n  var TreeAndNumber = [];\n\n  var p = 0;\n  for (var a in jsonArray) {\n    if (a == \"财报ID\" || a == \"公司ID\") {\n      ///console.log(\"hhhhh\");\n    } else {\n      //console.log(jsonArray[\"\" + a]);\n      //console.log(\"JsonStr:\", a);\n      let lastJson = {};\n      let lastNum = {};\n      lastJson.title = a;\n      lastJson.key = p;\n      lastNum.key = p;\n      lastNum.value = jsonArray[\"\" + a];\n      TreeJson.push(lastJson);\n      numOfFinance.push(lastNum);\n      p++;\n    }\n  }\n  TreeAndNumber.push(TreeJson);\n  TreeAndNumber.push(numOfFinance);\n  //console.log(\"numOfFinance\", numOfFinance);\n  //console.log(\"TreeJson:\", TreeJson);\n  console.log(TreeAndNumber);\n  return TreeAndNumber;\n}\n","import React, { Component } from \"react\";\r\nimport { Table, Button, Layout, Tree } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport { DownloadOutlined } from \"@ant-design/icons\";\r\nimport { handlePost } from \"../../../../WebAddinCommon\";\r\nimport { GetRealDataOfYear, ConvertJsonToTreeOfFinance, GetRealDataOfFinance } from \"../../../../../sources/RepositoryUtils\";\r\nimport { apiWritePath } from \"../../../../../settings\";\r\nimport { Consumer } from \"../../../../../components/WebAddinContext\";\r\n// const { Content } = Layout;\r\n// const locationArr = new Array();\r\nvar locationTable = [];\r\nvar numData = [];\r\n/* global wps:false */\r\n\r\nvar checkedIDs = [];\r\nconst onSelect = (selectedKeys, info) => {\r\n  let keyToPosition = {}\r\n  console.log(\"selected\", selectedKeys, info);\r\n  // console.log(\"set\");\r\n  // console.log(\"获得单元格位置：\",wps);\r\n  let CurRange = wps.WpsApplication().Selection.Range;\r\n  console.log(\"获得单元格位置：\", CurRange);\r\n  console.log(\"获得行数：\", CurRange.Columns.Count);\r\n  let position =\r\n    CurRange.Columns.Item(1).Index + \",\" + CurRange.Rows.Item(1).Index;\r\n  keyToPosition.key = selectedKeys[0]\r\n  keyToPosition.value = position\r\n  // console.log(keyToPosition)\r\n  locationTable.push(keyToPosition)\r\n  console.log(locationTable)\r\n  // document.getElementsByName(selectedKeys).value = position;\r\n  // console.log(selectedKeys)\r\n  // locationTable[selectedKeys] = document.getElementsByName(selectedKeys).value;\r\n  //    获取输入框的值：console.log(\"id\",document.getElementById(\"loc1\").value)\r\n  //    获取位置值console.log(\"读取前\",document.getElementsByName(\"location1\").value);\r\n  console.log(numData)\r\n};\r\n\r\nconst onCheck = (checkedKeys, info) => {\r\n  console.log(\"onCheck\", checkedKeys, info);\r\n  checkedIDs = checkedKeys;\r\n};\r\n\r\n\r\nclass detialTaskpane extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      treeData: this.reloaddata(),\r\n    };\r\n\r\n    console.log(\"finace table ini:\",this.state)\r\n  }\r\n\r\n  UNSAFE_componentWillMount() {\r\n    console.log(\"filltable_this.props.location:\", this.props.location);\r\n }\r\n\r\n  reloaddata = (state,useData) => {\r\n    console.log(\"filltable_this.props.location:\", this.props.location);\r\n    console.log(\"provide_state\",state);\r\n    console.log(\"provide_useData\",useData );\r\n    console.log(\"typeof_useData\",typeof(useData) );\r\n     if (useData!==undefined){\r\n      useData();\r\n      return;\r\n     }\r\n    const Company = {};\r\n    Company.公司ID = 1;\r\n    Company.年份 = 2020;\r\n    \r\n    handlePost(`${apiWritePath}getinf/getFinance`, Company).then((result) => {\r\n      // this.props.history.push(\"/\");\r\n      console.log(\"get-Repository-tree-result:\", result);\r\n      if (result.success === true) {\r\n        //加载数据到tree中\r\n       // console.log(result[\"msg\"][\"财报ID\"])\r\n        let realdata = GetRealDataOfFinance(result)\r\n       // console.log(\"realdata\", realdata)\r\n        var treeData = ConvertJsonToTreeOfFinance(realdata)[0];\r\n        numData = ConvertJsonToTreeOfFinance(realdata)[1];\r\n        this.setState({\r\n          treeData: treeData,\r\n        });\r\n      } else {\r\n\r\n      }\r\n      //console.log(\"logout_ok:\",this.state)\r\n    },\r\n      error => { });\r\n  }\r\n\r\n  insertdata = (state, selectData,checkedKeys) => {\r\n    console.log(\"checkedkeys\",checkedIDs);\r\n    console.log(\"state\",state);\r\n    console.log(\"selectData\",selectData);\r\n    /*\r\n    console.log(\"insert\");\r\n    let CurRange = wps.WpsApplication().Selection.Range;\r\n  \r\n  \r\n    for (var i = 0;i<locationTable.length;i++) {\r\n      console.log(i)\r\n      // console.log(locationTable[i])\r\n      console.log(\"checkedkeys\",checkedIDs)\r\n      console.log(locationTable[i].key)\r\n      console.log(checkedIDs)\r\n      for(var j = 0;j<checkedIDs.length;j++)\r\n      {\r\n        if (locationTable[i].key === checkedIDs[j]) {\r\n  \r\n          var x = parseInt(locationTable[i].value.split(\",\")[0])\r\n          var y = parseInt(locationTable[i].value.split(\",\")[1])      //将坐标拆分，后续使用cell方法定位\r\n          \r\n          console.log(\"keysss\",locationTable[i].key)\r\n          CurRange.Tables.Item(1).Cell(y, x).Range.Text = numData[locationTable[i].key].value;   //此处的table.Item还没有定位，后续要修改，将输入框中的值获取然后填充\r\n        }\r\n      }\r\n      \r\n    }\r\n    */\r\n    // for (var i = 0;i<checkedIDs.length;i++) {\r\n    //   // console.log(i)\r\n    //   // console.log(locationTable[i])\r\n    //   console.log(\"checkedkeys\",checkedIDs)\r\n    //   if (locationTable[checkedIDs[i]].key in checkedIDs) {\r\n  \r\n    //     var x = parseInt(locationTable[locationTable[i].key].value.split(\",\")[0])\r\n    //     var y = parseInt(locationTable[locationTable[i].key].value.split(\",\")[1])      //将坐标拆分，后续使用cell方法定位\r\n  \r\n    //     CurRange.Tables.Item(1).Cell(y, x).Range.Text = numData[locationTable[locationTable[i].key].key].value;   //此处的table.Item还没有定位，后续要修改，将输入框中的值获取然后填充\r\n    //   }\r\n    // }\r\n    // for (var id in checkedIDs) {\r\n    //   console.log(\"id:\", id);\r\n    //   var data = {};\r\n    //   data.公司ID = 1;\r\n    //   data.年份 = 2020;\r\n    //   const CurWord = wps.WpsApplication();\r\n    //   handlePost(`${apiWritePath}download/downloadTextRepositoryXml`, data).then((result) => {\r\n    //     // this.props.history.push(\"/\");\r\n    //     console.log(\"get-Repository-tree-result:\", result);\r\n    //     if (result.success === true) {\r\n    //       //插入数据到wps中\r\n    //       console.log(\"result.msg:\", Buffer.from(result.msg, \"base64\").toString(\"utf-8\"))\r\n    //       CurWord.ActiveDocument.Range(CurWord.Selection.Start, CurWord.Selection.End).InsertXML(Buffer.from(result.msg, \"base64\").toString(\"utf-8\"));\r\n    //     } else {\r\n    //       //提示财务\r\n    //     }\r\n    //     //console.log(\"logout_ok:\",this.state)\r\n    //   },\r\n    //     error => { });\r\n    // }\r\n  }\r\n\r\n  render() {\r\n    // const columns = [\r\n    //   {\r\n    //     title: \"各项指标\",\r\n    //     dataIndex: \"name\",\r\n    //     width: \"30%\",\r\n    //   },\r\n    //   {\r\n    //     title: \"单元格位置\",\r\n    //     dataIndex: \"value\",\r\n    //   },\r\n    // ];\r\n    // const selectedRowKeys = this.state.selectedRowKeys;\r\n    // const rowSelection = {\r\n    //   selectedRowKeys,\r\n    //   onChange: this.onSelectChange,\r\n    //   selections: [\r\n    //     Table.SELECTION_ALL,\r\n    //     Table.SELECTION_INVERT,\r\n    //     Table.SELECTION_NONE,\r\n    //     {\r\n    //       key: \"odd\",\r\n    //       text: \"Select Odd Row\",\r\n    //       onSelect: (changableRowKeys) => {\r\n    //         let newSelectedRowKeys = [];\r\n    //         newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n    //           if (index % 2 !== 0) {\r\n    //             return false;\r\n    //           }\r\n    //           return true;\r\n    //         });\r\n    //         this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n    //       },\r\n    //     },\r\n    //     {\r\n    //       key: \"even\",\r\n    //       text: \"Select Even Row\",\r\n    //       onSelect: (changableRowKeys) => {\r\n    //         let newSelectedRowKeys = [];\r\n    //         newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n    //           if (index % 2 !== 0) {\r\n    //             return true;\r\n    //           }\r\n    //           return false;\r\n    //         });\r\n    //         this.setState({ selectedRowKeys: newSelectedRowKeys });\r\n    //       },\r\n    //     },\r\n    //   ],\r\n    // };\r\n    \r\n    return (\r\n      <Consumer>\r\n      {({ state,useData, selectData }) => (\r\n      <div>\r\n        <h2>报表信息</h2>\r\n        {/* <Table\r\n          rowSelection={rowSelection}\r\n          columns={columns}\r\n          dataSource={this.state.contentCtrolsVal}\r\n          pagination={{ pageSize: 50, position: [\"bottomLeft\"] }}\r\n          scroll={{ y: 300 }}\r\n        />\r\n        <Button\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          icon={<DownloadOutlined />}\r\n          style={{ margin: \" 5px\" }}\r\n          onClick={this.onClickInsert.bind(null,locationTable)}\r\n        >\r\n          插入\r\n        </Button> */}\r\n        <Button onClick={this.insertdata.bind(this,state,selectData)}>插入</Button>\r\n        <Button onClick={this.reloaddata.bind(this,state,useData)}>刷新</Button>\r\n        <br />\r\n        <Tree\r\n          checkable\r\n          onSelect={onSelect}\r\n          onCheck={onCheck}\r\n          treeData={this.state.treeData}\r\n        />\r\n      </div>\r\n      )}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default detialTaskpane;\r\n"],"sourceRoot":""}