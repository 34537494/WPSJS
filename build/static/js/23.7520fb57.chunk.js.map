{"version":3,"sources":["sources/RepositoryUtils.js","components/WebAddinWriter/WriteComponents/pages/Repository/index.js"],"names":["GetRealData","response","GetRealDataOfYear","GetRealDataOfFinance","JsonToTree","JsonStr","SearchKey","tmpJson","indexOf","JsonObj","JSON","parse","p","title","substring","lastIndexOf","key","subJson","s","lastJson","subjsonstr","stringify","push","length","children","ConvertJsonToTree","jsonArray","TreeJson","a","child","console","log","ConvertJsonToTreeOfYear","ConvertJsonToTreeOfFinance","numOfFinance","TreeAndNumber","lastNum","value","Search","Input","checkedIDs","onSelect","selectedKeys","info","onCheck","checkedKeys","Repository","props","reloaddata","state","selectData","Company","handlePost","apiWritePath","then","result","success","realdata","treeData","setState","fullData","error","insertdata","data","公司ID","文本元编号","id","CurWord","wps","WpsApplication","Buffer","from","msg","toString","ActiveDocument","Range","Selection","Start","End","InsertXML","onSearch","style","margin","padding","placeholder","allowClear","onClick","bind","checkable","Component"],"mappings":"mGAAA,mNAEO,SAASA,EAAYC,GAE1B,OAAIA,EAAQ,QACc,MAApBA,EAAQ,KACa,MAAnBA,EAAQ,IACH,GAEAA,EAAQ,IAGV,WAAaA,EAAQ,KAAW,WAAaA,EAAQ,IAAU,IAGjE,GAIJ,SAASC,EAAkBD,GAEhC,OAAIA,EAAQ,QACc,MAApBA,EAAQ,KACa,MAAnBA,EAAQ,IACH,GAEAA,EAAQ,IAGV,WAAaA,EAAQ,KAAW,WAAaA,EAAQ,IAAU,IAGjE,GAIJ,SAASE,EAAqBF,GAEnC,OAAIA,EAAQ,QACc,MAApBA,EAAQ,KACa,MAAnBA,EAAQ,IACH,GAEAA,EAAQ,IAGV,WAAaA,EAAQ,KAAW,WAAaA,EAAQ,IAAU,IAGjE,GAIX,SAASG,EAAWC,EAASC,GAI3B,IAAIC,EAAU,GACd,IAAoC,IAAhCF,EAAQG,QAAQF,GAAmB,CACrC,IAAIG,EAAUC,KAAKC,MAAMN,GACzB,IAAK,IAAIO,KAAKH,EAAS,CAErB,IAAII,EAAQD,EAAEE,UAAUF,EAAEJ,QAAQ,KAAO,GACzCD,EAAQM,MAAQA,EAAMC,UAAU,EAAGD,EAAME,YAAY,MACrDR,EAAQS,IAAMH,EAAMC,UAAUD,EAAME,YAAY,KAAO,GACvD,IAAIE,EAAU,GACd,IAAK,IAAIC,KAAKT,EAAQG,GAAI,CACxB,IAAIO,EAAW,GACf,GAAsB,KAAlBV,EAAQG,GAAGM,GAAW,CACxB,IAAIE,EAAa,KAAOF,EAAI,KAAOR,KAAKW,UAAUZ,EAAQG,GAAGM,IAAM,IACnEC,EAAWf,EAAWgB,EAAYd,IACK,IAAnCc,EAAWZ,QAAQF,IACrBW,EAAQK,KAAKH,QAIf,IAA8B,IAA1BD,EAAEV,QAAQF,GAAmB,CAC/B,IAAIO,EAAQK,EAAEJ,UAAUI,EAAEV,QAAQ,KAAO,GACzCW,EAASN,MAAQA,EAAMC,UAAU,EAAGD,EAAME,YAAY,MACtDI,EAASH,IAAMH,EAAMC,UAAUD,EAAME,YAAY,KAAO,GACxDE,EAAQK,KAAKH,IAIfF,EAAQM,OAAS,IACnBhB,EAAQiB,SAAWP,IAI3B,OAAOV,EAGA,SAASkB,EAAkBC,EAAWpB,GAE3C,IAAIqB,EAAW,GACf,IAAK,IAAIC,KAAKF,EAAW,CAIvB,IAAIG,EAAQzB,EAAWsB,EAAUE,GAAG,kCAAUtB,GAEhB,OAA1BI,KAAKW,UAAUQ,IACjBF,EAASL,KAAKO,GAIlB,OADAC,QAAQC,IAAI,YAAaJ,GAClBA,EAGF,SAASK,EAAwBN,GAEtC,IAAIC,EAAW,GACf,IAAK,IAAIC,KAAKF,EAAW,CAEvBI,QAAQC,IAAIH,GACZE,QAAQC,IAAI,WAAYL,EAAUE,IAClC,IAAIT,EAAW,GACfA,EAASN,MAAQa,EAAUE,GAAG,gBAC9BT,EAASH,IAAMY,EACfD,EAASL,KAAKH,GAGhB,OADAW,QAAQC,IAAI,YAAaJ,GAClBA,EAGF,SAASM,EAA2BP,GAEzC,IAAIC,EAAW,GACXO,EAAe,GACfC,EAAgB,GAEhBvB,EAAI,EACR,IAAK,IAAIgB,KAAKF,EACZ,GAAS,kBAALE,GAAoB,kBAALA,OAEZ,CAGL,IAAIT,EAAW,GACXiB,EAAU,GACdjB,EAASN,MAAQe,EACjBT,EAASH,IAAMJ,EACfwB,EAAQpB,IAAMJ,EACdwB,EAAQC,MAAQX,EAAU,GAAKE,GAC/BD,EAASL,KAAKH,GACde,EAAaZ,KAAKc,GAClBxB,IAQJ,OALAuB,EAAcb,KAAKK,GACnBQ,EAAcb,KAAKY,GAGnBJ,QAAQC,IAAII,GACLA,I,gLChJDG,EAAWC,IAAXD,OAGJE,EAAa,GACXC,EAAW,SAACC,EAAcC,GAC9Bb,QAAQC,IAAI,WAAYW,EAAcC,IAGlCC,EAAU,SAACC,EAAaF,GAC5Bb,QAAQC,IAAI,UAAWc,EAAaF,GACpCH,EAAaK,GAGTC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,WAAa,SAACC,EAAOC,GACnBpB,QAAQC,IAAI,QAAQkB,GACpBnB,QAAQC,IAAI,aAAamB,GAIzB,IAAMC,EAAU,CAChBA,iBAAe,GACfC,YAAW,GAAD,OAAIC,eAAJ,gCAAgDF,GAASG,MACjE,SAACC,GAEC,GADAzB,QAAQC,IAAI,8BAA+BwB,IACpB,IAAnBA,EAAOC,QAAkB,CAG3B,IAAIC,EAAWzD,YAAYuD,GAEvBG,EAAWjC,YAAkBgC,EAAS,IAC1C,EAAKE,SAAS,CACZD,SAAUA,EACVE,SAAUH,QAMhB,SAACI,QAhCc,EAoCnBC,WAAa,WACXhC,QAAQC,IAAI,kBAAkBS,GADb,kBAKXuB,EAAO,IACNC,eAAO,EACZD,EAAKE,+BAAQzB,EAAW0B,GACxB,IAAMC,EAAUC,IAAIC,iBACpBjB,YAAW,GAAD,OACLC,eADK,sCAERU,GACAT,MACA,SAACC,IAGwB,IAAnBA,EAAOC,UAET1B,QAAQC,IACN,cACAuC,EAAOC,KAAKhB,EAAOiB,IAAK,UAAUC,SAAS,UAE7CN,EAAQO,eAAeC,MACrBR,EAAQS,UAAUC,MAClBV,EAAQS,UAAUE,KAClBC,UAAUT,EAAOC,KAAKhB,EAAOiB,IAAK,UAAUC,SAAS,cAM3D,SAACZ,QA7BL,IAAK,IAAIK,KAAM1B,EAAY,CAAC,IAGtBuB,EAHqB,MAtCV,EAuEnBiB,SAAW,SAAC3C,GAGJ,EAAKsB,SAAS,CACZD,SAAUjC,YAAkB,EAAKwB,MAAMW,SAASvB,MAzExD,EAAKY,MAAQ,CACXS,SAAU,EAAKV,cAHA,E,0CA8EnB,WAAU,IAAD,OAGP,OAEE,kBAAC,IAAD,MACC,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OACG,yBAAK+B,MAAO,CAAEC,OAAQ,sBAAuBC,QAAS,SACtD,wDACA,kBAAC7C,EAAD,CACE8C,YAAY,mDACZC,YAAU,EACVL,SAAU,EAAKA,WAGjB,kBAAC,IAAD,CAAQM,QAAS,EAAKxB,YAAtB,gBACA,kBAAC,IAAD,CAAQwB,QAAS,EAAKtC,WAAWuC,KAAK,EAAMtC,EAAOC,IAAnD,gBACA,6BACA,kBAAC,IAAD,CACEsC,WAAS,EACT/C,SAAUA,EACVG,QAASA,EACTc,SAAU,EAAKT,MAAMS,mB,GArGR+B,aAiHV3C,a","file":"static/js/23.7520fb57.chunk.js","sourcesContent":["import Tree from \"rc-tree\";\n\nexport function GetRealData(response) {\n  //获得实际数据\n  if (response[\"success\"]) {\n    if (response[\"head\"] == null) {\n      if (response[\"msg\"] == null) {\n        return \"\";\n      } else {\n        return response[\"msg\"];\n      }\n    } else {\n      return '{\"head\":' + response[\"head\"] + ',\"data\":' + response[\"msg\"] + \"}\";\n    }\n  } else {\n    return \"\";\n  }\n}\n\nexport function GetRealDataOfYear(response) {\n  //获得实际数据\n  if (response[\"success\"]) {\n    if (response[\"head\"] != null) {\n      if (response[\"msg\"] == null) {\n        return \"\";\n      } else {\n        return response[\"msg\"];\n      }\n    } else {\n      return '{\"head\":' + response[\"head\"] + ',\"data\":' + response[\"msg\"] + \"}\";\n    }\n  } else {\n    return \"\";\n  }\n}\n\nexport function GetRealDataOfFinance(response) {\n  //获得实际数据\n  if (response[\"success\"]) {\n    if (response[\"head\"] == null) {\n      if (response[\"msg\"] == null) {\n        return \"\";\n      } else {\n        return response[\"msg\"];\n      }\n    } else {\n      return '{\"head\":' + response[\"head\"] + ',\"data\":' + response[\"msg\"] + \"}\";\n    }\n  } else {\n    return \"\";\n  }\n}\n\nfunction JsonToTree(JsonStr, SearchKey) {\n  //将json转换为antidesign tree控件的数据源\n  //思路：遍历重建\n  //https://blog.csdn.net/xujie3/article/details/52954940\n  var tmpJson = {};\n  if (JsonStr.indexOf(SearchKey) !== -1) {\n    var JsonObj = JSON.parse(JsonStr);\n    for (var p in JsonObj) {\n      //遍历json数组\n      let title = p.substring(p.indexOf(\"_\") + 1);\n      tmpJson.title = title.substring(0, title.lastIndexOf(\":\"));\n      tmpJson.key = title.substring(title.lastIndexOf(\":\") + 1);\n      let subJson = [];\n      for (var s in JsonObj[p]) {\n        let lastJson = {};\n        if (JsonObj[p][s] !== \"\") {\n          let subjsonstr = '{\"' + s + '\":' + JSON.stringify(JsonObj[p][s]) + \"}\";\n          lastJson = JsonToTree(subjsonstr, SearchKey);\n          if (subjsonstr.indexOf(SearchKey) !== -1) {\n            subJson.push(lastJson);\n          }\n        } else {\n          //console.log(\"s:\", s);\n          if (s.indexOf(SearchKey) !== -1) {\n            let title = s.substring(s.indexOf(\"_\") + 1);\n            lastJson.title = title.substring(0, title.lastIndexOf(\":\"));\n            lastJson.key = title.substring(title.lastIndexOf(\":\") + 1);\n            subJson.push(lastJson);\n          }\n        }\n      }\n      if (subJson.length > 0) {\n        tmpJson.children = subJson;\n      }\n    }\n  }\nreturn tmpJson;\n}\n\nexport function ConvertJsonToTree(jsonArray, SearchKey) {\n  //将json转换为antidesign tree控件的数据源，要用到递归\n  var TreeJson = [];\n  for (var a in jsonArray) {\n    //遍历json数组时，这么写p为索引，0,1\n    //console.log(a);\n    //console.log(\"JsonStr:\", jsonArray[a][\"文本元结构\"]);\n    let child = JsonToTree(jsonArray[a][\"文本元结构\"], SearchKey);\n    //console.log(\"child:\", JSON.stringify(child) === \"{}\");\n    if (JSON.stringify(child) !== \"{}\") {\n      TreeJson.push(child);\n    }\n  }\n  console.log(\"TreeJson:\", TreeJson);\n  return TreeJson;\n}\n\nexport function ConvertJsonToTreeOfYear(jsonArray) {\n  //将json转换为antidesign tree控件的数据源，要用到递归\n  var TreeJson = [];\n  for (var a in jsonArray) {\n    //遍历json数组时，这么写p为索引，0,1\n    console.log(a);\n    console.log(\"JsonStr:\", jsonArray[a]);\n    let lastJson = {};\n    lastJson.title = jsonArray[a][\"年份\"];\n    lastJson.key = a;\n    TreeJson.push(lastJson);\n  }\n  console.log(\"TreeJson:\", TreeJson);\n  return TreeJson;\n}\n\nexport function ConvertJsonToTreeOfFinance(jsonArray) {\n  //将json转换为antidesign tree控件的数据源，要用到递归\n  var TreeJson = [];\n  var numOfFinance = [];\n  var TreeAndNumber = [];\n\n  var p = 0;\n  for (var a in jsonArray) {\n    if (a == \"财报ID\" || a == \"公司ID\") {\n      ///console.log(\"hhhhh\");\n    } else {\n      //console.log(jsonArray[\"\" + a]);\n      //console.log(\"JsonStr:\", a);\n      let lastJson = {};\n      let lastNum = {};\n      lastJson.title = a;\n      lastJson.key = p;\n      lastNum.key = p;\n      lastNum.value = jsonArray[\"\" + a];\n      TreeJson.push(lastJson);\n      numOfFinance.push(lastNum);\n      p++;\n    }\n  }\n  TreeAndNumber.push(TreeJson);\n  TreeAndNumber.push(numOfFinance);\n  //console.log(\"numOfFinance\", numOfFinance);\n  //console.log(\"TreeJson:\", TreeJson);\n  console.log(TreeAndNumber);\n  return TreeAndNumber;\n}\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Tree, Input, Button } from \"antd\";\r\nimport { handlePost } from \"../../../../WebAddinCommon\";\r\nimport {\r\n  GetRealData,\r\n  ConvertJsonToTree,\r\n} from \"../../../../../sources/RepositoryUtils\";\r\nimport { apiWritePath } from \"../../../../../settings\";\r\nimport { Consumer } from \"../../../../../components/WebAddinContext\";\r\nconst { Search } = Input;\r\n/* global wps:false */\r\n\r\nvar checkedIDs = [];\r\nconst onSelect = (selectedKeys, info) => {\r\n  console.log(\"selected\", selectedKeys, info);\r\n};\r\n\r\nconst onCheck = (checkedKeys, info) => {\r\n  console.log(\"onCheck\", checkedKeys, info);\r\n  checkedIDs = checkedKeys;\r\n};\r\n\r\nclass Repository extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      treeData: this.reloaddata(),\r\n    };\r\n  }\r\n\r\n  reloaddata = (state, selectData) => {\r\n    console.log(\"state\",state);\r\n    console.log(\"selectData\",selectData);\r\n    if (selectData!== undefined){\r\n     // selectData(\"getTextRepositoryTree\");\r\n  }\r\n    const Company = {};\r\n    Company.公司ID = 1;\r\n    handlePost(`${apiWritePath}getinf/getTextRepositoryTree`, Company).then(\r\n      (result) => {\r\n        console.log(\"get-Repository-tree-result:\", result);\r\n        if (result.success === true) {\r\n          //加载数据到tree中\r\n         // console.log(result);\r\n          let realdata = GetRealData(result);\r\n          //console.log(\"realdata\", realdata);\r\n          var treeData = ConvertJsonToTree(realdata,\"\");\r\n          this.setState({\r\n            treeData: treeData,\r\n            fullData: realdata\r\n          });\r\n        } else {\r\n        }\r\n        //console.log(\"logout_ok:\",this.state)\r\n      },\r\n      (error) => {}\r\n    );\r\n  };\r\n\r\n  insertdata = () => {\r\n    console.log(\"checkedIDs bef:\",checkedIDs)\r\n    for (var id in checkedIDs) {\r\n     // console.log(\"id:\", id);\r\n     // console.log(\"checkedIDs[id]:\", checkedIDs[id]);\r\n      var data = {};\r\n      data.公司ID = 1;\r\n      data.文本元编号 = checkedIDs[id];\r\n      const CurWord = wps.WpsApplication();\r\n      handlePost(\r\n        `${apiWritePath}download/downloadTextRepositoryXml`,\r\n        data\r\n      ).then(\r\n        (result) => {\r\n          // this.props.history.push(\"/\");\r\n        //  console.log(\"get-Repository-tree-result:\", result);\r\n          if (result.success === true) {\r\n            //插入数据到wps中\r\n            console.log(\r\n              \"result.msg:\",\r\n              Buffer.from(result.msg, \"base64\").toString(\"utf-8\")\r\n            );\r\n            CurWord.ActiveDocument.Range(\r\n              CurWord.Selection.Start,\r\n              CurWord.Selection.End\r\n            ).InsertXML(Buffer.from(result.msg, \"base64\").toString(\"utf-8\"));\r\n          } else {\r\n            //提示错误\r\n          }\r\n          //console.log(\"logout_ok:\",this.state)\r\n        },\r\n        (error) => {}\r\n      );\r\n    }\r\n  };\r\n  onSearch = (value) => {\r\n   // console.log(\"search key:\",value);\r\n    //console.log(\"this.state.realdata:\", this.state.fullData);\r\n          this.setState({\r\n            treeData: ConvertJsonToTree(this.state.fullData,value),\r\n          });\r\n  };\r\n  render() {\r\n   \r\n    \r\n    return (\r\n\r\n      <Consumer>\r\n      {({ state, selectData }) => (\r\n          <div style={{ margin: \"10px 10px 50px 10px\", padding: \"10px\" }}>\r\n          <h2>内容仓库</h2>\r\n          <Search\r\n            placeholder=\"请输入要搜索内容\"\r\n            allowClear\r\n            onSearch={this.onSearch}\r\n          />\r\n  \r\n          <Button onClick={this.insertdata}>插入</Button>\r\n          <Button onClick={this.reloaddata.bind(this, state, selectData)}>刷新</Button>\r\n          <br />\r\n          <Tree\r\n            checkable\r\n            onSelect={onSelect}\r\n            onCheck={onCheck}\r\n            treeData={this.state.treeData}\r\n          />\r\n        </div>\r\n          )}\r\n          </Consumer>\r\n\r\n\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default Repository;\r\n"],"sourceRoot":""}